2025-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>

	* gdc.dg/asm3.d: Adjust test.
	* gdc.dg/torture/pr96435.d: Adjust test.

2025-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>

	* gdc.dg/copy1.d: New test.

2025-01-12  David Malcolm  <dmalcolm@redhat.com>

	PR c/118112
	* gcc.dg/too-few-arguments.c: New test.
	* gcc.dg/too-many-arguments.c: New test.

2025-01-12  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/115788
	* gfortran.dg/ieee/out_of_range.f90: New test.
	* gfortran.dg/out_of_range_1.f90: New test.
	* gfortran.dg/out_of_range_2.f90: New test.
	* gfortran.dg/out_of_range_3.f90: New test.

2025-01-12  Maciej W. Rozycki  <macro@orcam.me.uk>

	* gcc.target/alpha/memcpy-hi-unaligned-dst.c: New file.

2025-01-12  Maciej W. Rozycki  <macro@orcam.me.uk>

	* gcc.target/alpha/memcpy-si-aligned.c: New file.
	* gcc.target/alpha/memcpy-si-unaligned.c: New file.
	* gcc.target/alpha/memcpy-si-unaligned-dst.c: New file.
	* gcc.target/alpha/memcpy-si-unaligned-src.c: New file.
	* gcc.target/alpha/memcpy-si-unaligned-src-bwx.c: New file.

2025-01-12  Maciej W. Rozycki  <macro@orcam.me.uk>

	* gcc.target/alpha/target-bwx-1.c: New file.
	* gcc.target/alpha/target-bwx-2.c: New file.
	* gcc.target/alpha/target-bwx-3.c: New file.
	* gcc.target/alpha/target-bwx-4.c: New file.
	* gcc.target/alpha/target-cix-1.c: New file.
	* gcc.target/alpha/target-cix-2.c: New file.
	* gcc.target/alpha/target-cix-3.c: New file.
	* gcc.target/alpha/target-cix-4.c: New file.
	* gcc.target/alpha/target-fix-1.c: New file.
	* gcc.target/alpha/target-fix-2.c: New file.
	* gcc.target/alpha/target-fix-3.c: New file.
	* gcc.target/alpha/target-fix-4.c: New file.
	* gcc.target/alpha/target-max-1.c: New file.
	* gcc.target/alpha/target-max-2.c: New file.
	* gcc.target/alpha/target-max-3.c: New file.
	* gcc.target/alpha/target-max-4.c: New file.

2025-01-11  Nathaniel Shead  <nathanieloshead@gmail.com>

	PR c++/114630
	* g++.dg/modules/pr114630.h: New test.
	* g++.dg/modules/pr114630_a.C: New test.
	* g++.dg/modules/pr114630_b.C: New test.
	* g++.dg/modules/pr114630_c.C: New test.

2025-01-11  Tobias Burnus  <tburnus@baylibre.com>

	* gfortran.dg/goacc/routine-external-level-of-parallelism-2.f: Update
	xfail'ed 'dg-bogus' for the better 'declared here' location.
	* gfortran.dg/gomp/dispatch-11.f90: New test.
	* gfortran.dg/gomp/dispatch-12.f90: New test.

2025-01-11  Paul Thomas  <pault@gcc.gnu.org>

	PR fortran/108434
	* gfortran.dg/pr108434.f90 : Add tests from comment 1.

2025-01-11  Jason Merrill  <jason@redhat.com>

	* g++.dg/modules/attrib-2_a.C: New test.
	* g++.dg/modules/attrib-2_b.C: New test.

2025-01-11  Jason Merrill  <jason@redhat.com>

	* g++.dg/modules/attrib-1_a.C: New test.
	* g++.dg/modules/attrib-1_b.C: New test.

2025-01-11  mengqinggang  <mengqinggang@loongson.cn>

	* gcc.target/loongarch/imm-load.c: Not generate ">>".

2025-01-11  Andrew MacLeod  <amacleod@redhat.com>

	PR tree-optimization/88575
	* gcc.dg/tree-ssa/minmax-27.c: Disable VRP.
	* gcc.dg/tree-ssa/minmax-27e.c: New.
	* gcc.dg/tree-ssa/minmax-27f.c: New.
	* gcc.dg/tree-ssa/minmax-28.c: Disable VRP.
	* gcc.dg/tree-ssa/minmax-28e.c: New.
	* gcc.dg/tree-ssa/minmax-28f.c: New.

2025-01-10  Alex Coplan  <alex.coplan@arm.com>

	PR tree-optimization/118211
	PR tree-optimization/116126
	* gcc.dg/vect/vect-early-break_130.c: New test.

2025-01-10  Tamar Christina  <Tamar.Christina@arm.com>
	    Alex Coplan  <alex.coplan@arm.com>

	PR tree-optimization/118211
	PR tree-optimization/116126
	* g++.dg/vect/vect-early-break_6.cc: New test.

2025-01-10  Alex Coplan  <alex.coplan@arm.com>
	    Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/118211
	PR tree-optimization/116126
	* gcc.dg/tree-ssa/cunroll-13.c: Don't vectorize.
	* gcc.dg/tree-ssa/cunroll-14.c: Likewise.
	* gcc.dg/unroll-6.c: Likewise.
	* gcc.dg/tree-ssa/gen-vect-28.c: Likewise.
	* gcc.dg/vect/vect-104.c: Expect to vectorize.
	* gcc.dg/vect/vect-early-break_108-pr113588.c: Likewise.
	* gcc.dg/vect/vect-early-break_109-pr113588.c: Likewise.
	* gcc.dg/vect/vect-early-break_110-pr113467.c: Likewise.
	* gcc.dg/vect/vect-early-break_3.c: Likewise.
	* gcc.dg/vect/vect-early-break_65.c: Likewise.
	* gcc.dg/vect/vect-early-break_8.c: Likewise.
	* gfortran.dg/vect/vect-5.f90: Likewise.
	* gfortran.dg/vect/vect-8.f90: Likewise.
	* gcc.dg/vect/vect-switch-search-line-fast.c:

2025-01-10  Marek Polacek  <polacek@redhat.com>

	PR c++/118391
	* g++.dg/cpp2a/lambda-uneval20.C: New test.

2025-01-10  Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	* gcc.target/arm/cmse/cmse-15.c: Added pattern for armv8-m.base.

2025-01-10  Paul-Antoine Arras  <parras@baylibre.com>

	* g++.dg/gomp/dispatch-8.C: New test.

2025-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR c++/118387
	* g++.dg/cpp2a/spaceship-synth17.C: New test.

2025-01-10  Jason Merrill  <jason@redhat.com>

	* g++.dg/modules/operator-2_a.C: New test.
	* g++.dg/modules/operator-2_b.C: New test.

2025-01-10  Vladimir N. Makarov  <vmakarov@redhat.com>

	PR target/118017
	* gcc.target/i386/pr118017.c: Check target int128.

2025-01-10  Marek Polacek  <polacek@redhat.com>

	PR c++/117937
	* g++.dg/cpp26/pack-indexing13.C: New test.
	* g++.dg/cpp26/pack-indexing14.C: New test.

2025-01-10  Stefan Schulze Frielinghaus  <stefansf@gcc.gnu.org>

	* gcc.target/s390/uaddc-1.c: New test.
	* gcc.target/s390/uaddc-2.c: New test.
	* gcc.target/s390/uaddc-3.c: New test.
	* gcc.target/s390/usubc-1.c: New test.
	* gcc.target/s390/usubc-2.c: New test.
	* gcc.target/s390/usubc-3.c: New test.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/acle/fpmr-1.c: New test.
	* gcc.target/aarch64/acle/fpmr-2.c: New test.
	* gcc.target/aarch64/acle/fpmr-3.c: New test.
	* gcc.target/aarch64/acle/fpmr-4.c: New test.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* g++.target/aarch64/mv-pragma.C: New test.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/cpunative/native_cpu_21.c: Add rcpc2 to
	expected feature string instead of rcpc.
	* gcc.target/aarch64/cpunative/native_cpu_22.c: Ditto.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/cpunative/native_cpu_21.c: Add flagm2 to
	expected feature string instead of flagm.
	* gcc.target/aarch64/cpunative/native_cpu_22.c: Ditto.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/cpunative/native_cpu_21.c: Add frintts to
	expected feature string.
	* gcc.target/aarch64/cpunative/native_cpu_22.c: Ditto.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/cpunative/native_cpu_21.c: Add jscvt to
	expected feature string.
	* gcc.target/aarch64/cpunative/native_cpu_22.c: Ditto.

2025-01-10  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.target/aarch64/cpunative/info_15: Add fcma to Features.
	* gcc.target/aarch64/cpunative/info_16: Ditto.
	* gcc.target/aarch64/cpunative/info_17: Ditto.
	* gcc.target/aarch64/cpunative/info_8: Ditto.
	* gcc.target/aarch64/cpunative/info_9: Ditto.

2025-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR c/118376
	* gcc.dg/pr118376.c: New test.

2025-01-10  Richard Sandiford  <richard.sandiford@arm.com>

	PR rtl-optimization/117186
	* gcc.dg/torture/pr117186.c: New test.
	* gcc.target/aarch64/pr117186.c: Likewise.

2025-01-10  Alexandre Oliva  <oliva@adacore.com>

	PR tree-optimization/118344
	* gcc.dg/field-merge-19.c: New.

2025-01-10  Alexandre Oliva  <oliva@adacore.com>

	PR tree-optimization/118206
	* gcc.dg/field-merge-18.c: New.

2025-01-10  Alexandre Oliva  <oliva@adacore.com>

	PR testsuite/118025
	* gcc.dg/field-merge-1.c: Convert constants to desired types.
	* gcc.dg/field-merge-3.c: Likewise.
	* gcc.dg/field-merge-4.c: Likewise.
	* gcc.dg/field-merge-5.c: Likewise.
	* gcc.dg/field-merge-11.c: Likewise.
	* gcc.dg/field-merge-17.c: Don't mess with padding bits.

2025-01-10  Alexandre Oliva  <oliva@adacore.com>

	PR testsuite/118025
	* gcc.dg/field-merge-1.c: Skip BIT_FIELD_REF counting on AVR and PRU.
	* gcc.dg/field-merge-3.c: Bypass the test if short doesn't have the
	expected size.
	* gcc.dg/field-merge-8.c: Likewise.
	* gcc.dg/field-merge-9.c: Likewise.  Skip optimization counting on
	AVR and PRU.
	* gcc.dg/field-merge-13.c: Skip optimization counting on AVR and PRU.
	* gcc.dg/field-merge-15.c: Likewise.
	* gcc.dg/field-merge-17.c: Likewise.
	* gcc.dg/field-merge-16.c: Likewise.  Drop runtime bypass.  Use
	smaller types.
	* gcc.dg/field-merge-14.c: Add comments.

2025-01-10  Alexandre Oliva  <oliva@adacore.com>

	* gcc.dg/field-merge-17.c: New.

2025-01-10  Martin Jambor  <mjambor@suse.cz>

	PR ipa/118138
	* gcc.dg/ipa/pr118138.c: New test.

2025-01-10  Thomas Schwinge  <tschwinge@baylibre.com>

	* gcc.target/nvptx/__builtin_frame_address_0-1.c: New.

2025-01-10  Thomas Schwinge  <tschwinge@baylibre.com>

	* gcc.target/nvptx/__builtin_stack_address-1.c: New.

2025-01-10  Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	* gcc.target/arm/pr59858.c: Use -std=c17 and effective-target
	arm_arch_v5te_thumb.

2025-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR c++/118277
	* g++.dg/cpp1z/constexpr-asm-4.C: New test.
	* g++.dg/cpp1z/constexpr-asm-5.C: New test.

2025-01-10  Jakub Jelinek  <jakub@redhat.com>

	* g++.dg/modules/decomp-2_b.C: New test.
	* g++.dg/modules/decomp-2_a.H: New file.

2025-01-10  Jason Merrill  <jason@redhat.com>

	* g++.dg/modules/constexpr-if-1_a.C: New test.
	* g++.dg/modules/constexpr-if-1_b.C: New test.

2025-01-10  chenxiaolong  <chenxiaolong@loongson.cn>
	    Deng Jianbo  <dengjianbo@loongson.cn>.

	* gcc.target/loongarch/vect-slp-two-operator.c: New test.

2025-01-09  Edwin Lu  <ewlu@rivosinc.com>

	* lib/target-supports.exp: Fix effective target sync_char_short
	for riscv*-*-*

2025-01-09  Tamar Christina  <tamar.christina@arm.com>

	PR target/118188
	* gcc.target/aarch64/sve/gather_load_12.c: New test.
	* gcc.target/aarch64/sve/gather_load_13.c: New test.
	* gcc.target/aarch64/sve/gather_load_14.c: New test.

2025-01-09  Vladimir N. Makarov  <vmakarov@redhat.com>

	PR target/118017
	* gcc.target/i386/pr118017.c: New.

2025-01-09  Jason Merrill  <jason@redhat.com>

	* g++.dg/cpp0x/noexcept88.C: New test.

2025-01-09  Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	* gcc.target/arm/armv8_2-fp16-conv-1.c: Fix typo.

2025-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR target/118362
	* gcc.c-torture/compile/pr118362.c: New test.
	* gcc.target/s390/pr118362.c: New test.

2025-01-09  Martin Uecker  <uecker@tugraz.at>

	PR c/117866
	* gcc.dg/pr117866.c: New test.
	* gcc.dg/strub-pr118007.c: Adapt.

2025-01-09  Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	* gcc.target/arm/memset-inline-8.c: Use -Os and prefix assembler
	instructions with a tab to improve test stability.
	* gcc.target/arm/memset-inline-8-exe.c: Use -Os.

2025-01-09  Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	* gcc.target/arm/armv8_2-fp16-conv-1.c: Convert
	scan-assembler-times to check-function-bodies.

2025-01-09  Jason Merrill  <jason@redhat.com>
	    Torbjörn SVENSSON  <torbjorn.svensson@foss.st.com>

	PR c/116060
	* c-c++-common/analyzer/out-of-bounds-diagram-8.c: Update to
	correct type.
	* c-c++-common/analyzer/out-of-bounds-diagram-11.c: Likewise.
	* gcc.dg/analyzer/out-of-bounds-diagram-10.c: Likewise.

2025-01-09  Dimitar Dimitrov  <dimitar@dinux.eu>

	* gcc.dg/pr118325.c: Require effective target trampolines.

2025-01-09  Patrick Palka  <ppalka@redhat.com>

	PR c++/118060
	* g++.dg/cpp2a/concepts-requires40.C: New test.

2025-01-09  Patrick Palka  <ppalka@redhat.com>

	PR c++/117887
	* g++.dg/cpp2a/concepts-requires39.C: New test.
	* g++.dg/cpp2a/lambda-targ10.C: New test.

2025-01-09  Patrick Palka  <ppalka@redhat.com>

	PR c++/117925
	* g++.dg/template/non-dependent35.C: New test.

2025-01-09  Patrick Palka  <ppalka@redhat.com>

	PR c++/117993
	* g++.dg/template/dependent-base4.C: New test.
	* g++.dg/template/dependent-base5.C: New test.

2025-01-09  Patrick Palka  <ppalka@redhat.com>

	PR c++/117792
	* g++.dg/cpp1z/nontype7.C: New test.

2025-01-09  Thomas Schwinge  <tschwinge@baylibre.com>

	* gcc.dg/crc-linux-3.c: Move...
	* gcc.dg/torture/crc-linux-3.c: ... here.

2025-01-09  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/alloca-1.c: Evolve into...
	* gcc.target/nvptx/alloca-1-O0.c: ... this, ...
	* gcc.target/nvptx/alloca-1-O1.c: ... this, and...
	* gcc.target/nvptx/alloca-1-sm_30.c: ... this.
	* gcc.target/nvptx/vla-1.c: Evolve into...
	* gcc.target/nvptx/vla-1-O0.c: ... this, ...
	* gcc.target/nvptx/vla-1-O1.c: ... this, and...
	* gcc.target/nvptx/vla-1-sm_30.c: ... this.
	* gcc.c-torture/execute/pr36321.c: Adjust.
	* gcc.target/nvptx/__builtin_alloca_0-1-O0.c: Likewise.
	* gcc.target/nvptx/__builtin_alloca_0-1-O1.c: Likewise.
	* gcc.target/nvptx/__builtin_stack_save___builtin_stack_restore-1.c:
	Likewise.
	* gcc.target/nvptx/softstack.c: Likewise.
	* gcc.target/nvptx/__builtin_stack_save___builtin_stack_restore-1-sm_30.c:
	New.
	* gcc.target/nvptx/alloca-2-O0.c: Likewise.
	* gcc.target/nvptx/alloca-3-O1.c: Likewise.
	* gcc.target/nvptx/alloca-4-O3.c: Likewise.
	* gcc.target/nvptx/alloca-5.c: Likewise.
	* lib/target-supports.exp (check_effective_target_alloca): Adjust.
	(check_nvptx_default_ptx_isa_target_architecture_at_least)
	(check_nvptx_runtime_ptx_isa_target_architecture_at_least)
	(check_effective_target_nvptx_runtime_alloca_ptx)
	(add_options_for_nvptx_alloca_ptx): New.

2025-01-09  H.J. Lu  <hjl.tools@gmail.com>

	PR rtl-optimization/118266
	* gcc.target/i386/pr118266.c: New test.

2025-01-09  Jakub Jelinek  <jakub@redhat.com>
	    Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/117927
	* gcc.dg/tree-ssa/pr117927.c: New test.

2025-01-09  Tobias Burnus  <tburnus@baylibre.com>

	* c-c++-common/gomp/append-args-1.c: Update dg-*.
	* c-c++-common/gomp/append-args-3.c: Extend testcase.
	* c-c++-common/gomp/dispatch-11.c: Update dg-*.
	* c-c++-common/gomp/dispatch-12.c: Update dg-*.
	* g++.dg/gomp/append-args-1.C: Update dg-*.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/march-map=sm_52.c: Adjust.
	* gcc.target/nvptx/march-map=sm_53.c: Likewise.
	* gcc.target/nvptx/march-map=sm_60.c: Likewise.
	* gcc.target/nvptx/march-map=sm_61.c: Likewise.
	* gcc.target/nvptx/march-map=sm_62.c: Likewise.
	* gcc.target/nvptx/march-map=sm_70.c: Likewise.
	* gcc.target/nvptx/march-map=sm_72.c: Likewise.
	* gcc.target/nvptx/march-map=sm_75.c: Likewise.
	* gcc.target/nvptx/march-map=sm_80.c: Likewise.
	* gcc.target/nvptx/march-map=sm_86.c: Likewise.
	* gcc.target/nvptx/march-map=sm_87.c: Likewise.
	* gcc.target/nvptx/march=sm_52.c: Likewise.
	* gcc.target/nvptx/march=sm_53.c: Likewise.
	* gcc.target/nvptx/march=sm_70.c: Likewise.
	* gcc.target/nvptx/march=sm_75.c: Likewise.
	* gcc.target/nvptx/march=sm_80.c: Likewise.
	* gcc.target/nvptx/mptx=_.c: Use '-march=sm_89'.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	* gcc.target/nvptx/mptx=7.3.c: New.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	* lib/target-supports.exp
	(check_effective_target_nvptx_softstack): New.
	(check_effective_target_alloca) [nvptx]: Use it.

2025-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR c++/117825
	* g++.dg/warn/pr117825.C: New test.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/__builtin_stack_save___builtin_stack_restore-1.c:
	Adjust.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/__builtin_stack_save___builtin_stack_restore-1.c:
	Add.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/__builtin_alloca_0-1-O0.c: New.
	* gcc.target/nvptx/__builtin_alloca_0-1-O1.c: Likewise.

2025-01-08  Jason Merrill  <jason@redhat.com>

	* g++.dg/gomp/declare-variant-3.C: Update diagnostic.
	* g++.dg/gomp/declare-variant-5.C: Likewise.

2025-01-08  Jason Merrill  <jason@redhat.com>

	* g++.dg/gomp/declare-variant-3.C: Don't depend on expr dump.
	* g++.dg/gomp/declare-variant-5.C: Likewise.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/alloca-2-O1.c: New.

2025-01-08  Thomas Schwinge  <tschwinge@baylibre.com>

	PR target/65181
	* gcc.target/nvptx/alloca-1.c: New.
	* gcc.target/nvptx/vla-1.c: Likewise.

2025-01-08  Richard Sandiford  <richard.sandiford@arm.com>

	PR target/107102
	* gcc.target/aarch64/sve/sibcall_1.c: New test.

2025-01-08  Tobias Burnus  <tburnus@baylibre.com>

	* c-c++-common/gomp/append-args-4.c: New test.
	* c-c++-common/gomp/append-args-5.c: New test.

2025-01-08  Marek Polacek  <polacek@redhat.com>

	PR c++/118169
	* g++.dg/cpp1y/constexpr-prvalue2.C: New test.

2025-01-08  Thomas Schwinge  <thomas@codesourcery.com>

	* gcc.dg/torture/stackalign/global-1.c: Re-enable for nvptx.
	* gcc.dg/torture/stackalign/inline-1.c: Likewise.
	* gcc.dg/torture/stackalign/nested-1.c: Likewise.
	* gcc.dg/torture/stackalign/nested-2.c: Likewise.
	* gcc.dg/torture/stackalign/nested-4.c: Likewise.
	* gcc.dg/torture/stackalign/pr16660-1.c: Likewise.
	* gcc.dg/torture/stackalign/pr16660-2.c: Likewise.
	* gcc.dg/torture/stackalign/pr16660-3.c: Likewise.
	* gcc.dg/torture/stackalign/ret-struct-1.c: Likewise.
	* gcc.dg/torture/stackalign/struct-1.c: Likewise.

2025-01-08  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/117979
	* gcc.dg/torture/pr117979.c: New testcase.

2025-01-08  Jakub Jelinek  <jakub@redhat.com>

	* g++.dg/debug/dwarf2/lang-cpp17.C: Add -gno-strict-dwarf to
	dg-options.  Check also for DW_AT_language_{name,version} values.
	* g++.dg/debug/dwarf2/lang-cpp20.C: Likewise.
	* g++.dg/debug/dwarf2/lang-cpp23.C: New test.

2025-01-08  Richard Biener  <rguenther@suse.de>

	PR middle-end/118325
	* gcc.dg/pr118325.c: New testcase.

2025-01-08  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/118269
	* gcc.dg/vect/vect-early-break_131-pr118269.c: New testcase.

2025-01-08  Christophe Lyon  <christophe.lyon@linaro.org>

	PR target/118332
	* gcc.target/arm/mve/intrinsics/pr118332.c: New test.

2025-01-08  Jeevitha  <jeevitha@linux.ibm.com>

	* gcc.target/powerpc/amo1.c: Removed powerpc*-*-* from the target and
	simplified dg-options.
	* gcc.target/powerpc/amo2.c: Simplified dg-options and added powerpc_vsx
	target check.

2025-01-08  Haochen Jiang  <haochen.jiang@intel.com>

	* gcc.target/i386/amxavx512-asmatt-1.c: Adjust intrin call.
	* gcc.target/i386/amxavx512-asmintel-1.c: Ditto.
	* gcc.target/i386/amxavx512-cvtrowps2pbf16-2.c: Rename to...
	* gcc.target/i386/amxavx512-cvtrowps2bf16-2.c: ...this. Rename
	test functions.

2025-01-08  Hongyu Wang  <hongyu.wang@intel.com>

	* gcc.target/i386/cmov12.c: New test.

2025-01-07  Vineet Gupta  <vineetg@rivosinc.com>
	    Pan Li  <pan2.li@intel.com>

	PR target/117722
	* gcc.target/riscv/rvv/autovec/pr117722.c: New test.

2025-01-07  Tsung Chun Lin  <tclin914@gmail.com>

	* gcc.target/riscv/rvv/autovec/pr113469.c: Update expected output.
	* gcc.target/riscv/rvv/base/movqi-1.c: New test.

2025-01-07  Jeff Law  <jlaw@ventanamicro.com>

	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-3.c: Update expected
	output.
	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-12.c: Likewise.

2025-01-07  Andreas Schwab  <schwab@suse.de>

	* lib/target-supports.exp
	(check_effective_target_sync_char_short): Enable for riscv*-*-*.

2025-01-07  Andreas Schwab  <schwab@suse.de>

	PR target/118137
	* gcc.dg/atomic/pr118137.c: New.

2025-01-07  Dimitar Dimitrov  <dimitar@dinux.eu>

	* gcc.dg/pr90838-2.c: Skip if default ABI is E.
	* gcc.dg/pr90838.c: Ditto.
	* gcc.target/riscv/adddibeq.c: Ditto.
	* gcc.target/riscv/adddibfeq.c: Ditto.
	* gcc.target/riscv/adddibfge.c: Ditto.
	* gcc.target/riscv/adddibfgt.c: Ditto.
	* gcc.target/riscv/adddibfle.c: Ditto.
	* gcc.target/riscv/adddibflt.c: Ditto.
	* gcc.target/riscv/adddibfne.c: Ditto.
	* gcc.target/riscv/adddibge.c: Ditto.
	* gcc.target/riscv/adddibgeu.c: Ditto.
	* gcc.target/riscv/adddibgt.c: Ditto.
	* gcc.target/riscv/adddibgtu.c: Ditto.
	* gcc.target/riscv/adddible.c: Ditto.
	* gcc.target/riscv/adddibleu.c: Ditto.
	* gcc.target/riscv/adddiblt.c: Ditto.
	* gcc.target/riscv/adddibltu.c: Ditto.
	* gcc.target/riscv/adddibne.c: Ditto.
	* gcc.target/riscv/adddieq.c: Ditto.
	* gcc.target/riscv/adddifeq.c: Ditto.
	* gcc.target/riscv/adddifge.c: Ditto.
	* gcc.target/riscv/adddifgt.c: Ditto.
	* gcc.target/riscv/adddifle.c: Ditto.
	* gcc.target/riscv/adddiflt.c: Ditto.
	* gcc.target/riscv/adddifne.c: Ditto.
	* gcc.target/riscv/adddige.c: Ditto.
	* gcc.target/riscv/adddigeu.c: Ditto.
	* gcc.target/riscv/adddigt.c: Ditto.
	* gcc.target/riscv/adddigtu.c: Ditto.
	* gcc.target/riscv/adddile.c: Ditto.
	* gcc.target/riscv/adddileu.c: Ditto.
	* gcc.target/riscv/adddilt.c: Ditto.
	* gcc.target/riscv/adddiltu.c: Ditto.
	* gcc.target/riscv/adddine.c: Ditto.
	* gcc.target/riscv/addsibeq.c: Ditto.
	* gcc.target/riscv/addsibfeq.c: Ditto.
	* gcc.target/riscv/addsibfge.c: Ditto.
	* gcc.target/riscv/addsibfgt.c: Ditto.
	* gcc.target/riscv/addsibfle.c: Ditto.
	* gcc.target/riscv/addsibflt.c: Ditto.
	* gcc.target/riscv/addsibfne.c: Ditto.
	* gcc.target/riscv/addsibge.c: Ditto.
	* gcc.target/riscv/addsibgeu.c: Ditto.
	* gcc.target/riscv/addsibgt.c: Ditto.
	* gcc.target/riscv/addsibgtu.c: Ditto.
	* gcc.target/riscv/addsible.c: Ditto.
	* gcc.target/riscv/addsibleu.c: Ditto.
	* gcc.target/riscv/addsiblt.c: Ditto.
	* gcc.target/riscv/addsibltu.c: Ditto.
	* gcc.target/riscv/addsibne.c: Ditto.
	* gcc.target/riscv/addsieq.c: Ditto.
	* gcc.target/riscv/addsifeq.c: Ditto.
	* gcc.target/riscv/addsifge.c: Ditto.
	* gcc.target/riscv/addsifgt.c: Ditto.
	* gcc.target/riscv/addsifle.c: Ditto.
	* gcc.target/riscv/addsiflt.c: Ditto.
	* gcc.target/riscv/addsifne.c: Ditto.
	* gcc.target/riscv/addsige.c: Ditto.
	* gcc.target/riscv/addsigeu.c: Ditto.
	* gcc.target/riscv/addsigt.c: Ditto.
	* gcc.target/riscv/addsigtu.c: Ditto.
	* gcc.target/riscv/addsile.c: Ditto.
	* gcc.target/riscv/addsileu.c: Ditto.
	* gcc.target/riscv/addsilt.c: Ditto.
	* gcc.target/riscv/addsiltu.c: Ditto.
	* gcc.target/riscv/addsine.c: Ditto.
	* gcc.target/riscv/cmo-zicboz-zic64-1.c: Ditto.
	* gcc.target/riscv/cmpmemsi-2.c: Ditto.
	* gcc.target/riscv/cmpmemsi-3.c: Ditto.
	* gcc.target/riscv/cmpmemsi.c: Ditto.
	* gcc.target/riscv/cpymemsi-2.c: Ditto.
	* gcc.target/riscv/cpymemsi-3.c: Ditto.
	* gcc.target/riscv/cpymemsi.c: Ditto.
	* gcc.target/riscv/crc-builtin-zbc32.c: Ditto.
	* gcc.target/riscv/crc-builtin-zbc64.c: Ditto.
	* gcc.target/riscv/cset-sext-rtl.c: Ditto.
	* gcc.target/riscv/cset-sext-rtl32.c: Ditto.
	* gcc.target/riscv/cset-sext-sfb-rtl.c: Ditto.
	* gcc.target/riscv/cset-sext-sfb-rtl32.c: Ditto.
	* gcc.target/riscv/cset-sext-sfb.c: Ditto.
	* gcc.target/riscv/cset-sext-thead-rtl.c: Ditto.
	* gcc.target/riscv/cset-sext-thead.c: Ditto.
	* gcc.target/riscv/cset-sext-ventana-rtl.c: Ditto.
	* gcc.target/riscv/cset-sext-ventana.c: Ditto.
	* gcc.target/riscv/cset-sext-zicond-rtl.c: Ditto.
	* gcc.target/riscv/cset-sext-zicond-rtl32.c: Ditto.
	* gcc.target/riscv/cset-sext-zicond.c: Ditto.
	* gcc.target/riscv/cset-sext.c: Ditto.
	* gcc.target/riscv/matrix_add_const.c: Ditto.
	* gcc.target/riscv/movdibeq-thead.c: Ditto.
	* gcc.target/riscv/movdibeq-ventana.c: Ditto.
	* gcc.target/riscv/movdibeq-zicond.c: Ditto.
	* gcc.target/riscv/movdibeq.c: Ditto.
	* gcc.target/riscv/movdibfeq-ventana.c: Ditto.
	* gcc.target/riscv/movdibfeq-zicond.c: Ditto.
	* gcc.target/riscv/movdibfeq.c: Ditto.
	* gcc.target/riscv/movdibfge-ventana.c: Ditto.
	* gcc.target/riscv/movdibfge-zicond.c: Ditto.
	* gcc.target/riscv/movdibfge.c: Ditto.
	* gcc.target/riscv/movdibfgt-ventana.c: Ditto.
	* gcc.target/riscv/movdibfgt-zicond.c: Ditto.
	* gcc.target/riscv/movdibfgt.c: Ditto.
	* gcc.target/riscv/movdibfle-ventana.c: Ditto.
	* gcc.target/riscv/movdibfle-zicond.c: Ditto.
	* gcc.target/riscv/movdibfle.c: Ditto.
	* gcc.target/riscv/movdibflt-ventana.c: Ditto.
	* gcc.target/riscv/movdibflt-zicond.c: Ditto.
	* gcc.target/riscv/movdibflt.c: Ditto.
	* gcc.target/riscv/movdibfne-ventana.c: Ditto.
	* gcc.target/riscv/movdibfne-zicond.c: Ditto.
	* gcc.target/riscv/movdibfne.c: Ditto.
	* gcc.target/riscv/movdibge-thead.c: Ditto.
	* gcc.target/riscv/movdibge-ventana.c: Ditto.
	* gcc.target/riscv/movdibge-zicond.c: Ditto.
	* gcc.target/riscv/movdibge.c: Ditto.
	* gcc.target/riscv/movdibgeu-thead.c: Ditto.
	* gcc.target/riscv/movdibgeu-ventana.c: Ditto.
	* gcc.target/riscv/movdibgeu-zicond.c: Ditto.
	* gcc.target/riscv/movdibgeu.c: Ditto.
	* gcc.target/riscv/movdibgt-thead.c: Ditto.
	* gcc.target/riscv/movdibgt-ventana.c: Ditto.
	* gcc.target/riscv/movdibgt-zicond.c: Ditto.
	* gcc.target/riscv/movdibgt.c: Ditto.
	* gcc.target/riscv/movdibgtu-thead.c: Ditto.
	* gcc.target/riscv/movdibgtu-ventana.c: Ditto.
	* gcc.target/riscv/movdibgtu-zicond.c: Ditto.
	* gcc.target/riscv/movdibgtu.c: Ditto.
	* gcc.target/riscv/movdible-thead.c: Ditto.
	* gcc.target/riscv/movdible-ventana.c: Ditto.
	* gcc.target/riscv/movdible-zicond.c: Ditto.
	* gcc.target/riscv/movdible.c: Ditto.
	* gcc.target/riscv/movdibleu-thead.c: Ditto.
	* gcc.target/riscv/movdibleu-ventana.c: Ditto.
	* gcc.target/riscv/movdibleu-zicond.c: Ditto.
	* gcc.target/riscv/movdibleu.c: Ditto.
	* gcc.target/riscv/movdiblt-thead.c: Ditto.
	* gcc.target/riscv/movdiblt-ventana.c: Ditto.
	* gcc.target/riscv/movdiblt-zicond.c: Ditto.
	* gcc.target/riscv/movdiblt.c: Ditto.
	* gcc.target/riscv/movdibltu-thead.c: Ditto.
	* gcc.target/riscv/movdibltu-ventana.c: Ditto.
	* gcc.target/riscv/movdibltu-zicond.c: Ditto.
	* gcc.target/riscv/movdibltu.c: Ditto.
	* gcc.target/riscv/movdibne-thead.c: Ditto.
	* gcc.target/riscv/movdibne-ventana.c: Ditto.
	* gcc.target/riscv/movdibne-zicond.c: Ditto.
	* gcc.target/riscv/movdibne.c: Ditto.
	* gcc.target/riscv/movdieq-sfb.c: Ditto.
	* gcc.target/riscv/movdieq-thead.c: Ditto.
	* gcc.target/riscv/movdieq-ventana.c: Ditto.
	* gcc.target/riscv/movdieq-zicond.c: Ditto.
	* gcc.target/riscv/movdieq.c: Ditto.
	* gcc.target/riscv/movdifeq-sfb.c: Ditto.
	* gcc.target/riscv/movdifeq-thead.c: Ditto.
	* gcc.target/riscv/movdifeq-ventana.c: Ditto.
	* gcc.target/riscv/movdifeq-zicond.c: Ditto.
	* gcc.target/riscv/movdifeq.c: Ditto.
	* gcc.target/riscv/movdifge-sfb.c: Ditto.
	* gcc.target/riscv/movdifge-thead.c: Ditto.
	* gcc.target/riscv/movdifge-ventana.c: Ditto.
	* gcc.target/riscv/movdifge-zicond.c: Ditto.
	* gcc.target/riscv/movdifge.c: Ditto.
	* gcc.target/riscv/movdifgt-sfb.c: Ditto.
	* gcc.target/riscv/movdifgt-thead.c: Ditto.
	* gcc.target/riscv/movdifgt-ventana.c: Ditto.
	* gcc.target/riscv/movdifgt-zicond.c: Ditto.
	* gcc.target/riscv/movdifgt.c: Ditto.
	* gcc.target/riscv/movdifle-sfb.c: Ditto.
	* gcc.target/riscv/movdifle-thead.c: Ditto.
	* gcc.target/riscv/movdifle-ventana.c: Ditto.
	* gcc.target/riscv/movdifle-zicond.c: Ditto.
	* gcc.target/riscv/movdifle.c: Ditto.
	* gcc.target/riscv/movdiflt-sfb.c: Ditto.
	* gcc.target/riscv/movdiflt-thead.c: Ditto.
	* gcc.target/riscv/movdiflt-ventana.c: Ditto.
	* gcc.target/riscv/movdiflt-zicond.c: Ditto.
	* gcc.target/riscv/movdiflt.c: Ditto.
	* gcc.target/riscv/movdifne-sfb.c: Ditto.
	* gcc.target/riscv/movdifne-thead.c: Ditto.
	* gcc.target/riscv/movdifne-ventana.c: Ditto.
	* gcc.target/riscv/movdifne-zicond.c: Ditto.
	* gcc.target/riscv/movdifne.c: Ditto.
	* gcc.target/riscv/movdige-sfb.c: Ditto.
	* gcc.target/riscv/movdige-thead.c: Ditto.
	* gcc.target/riscv/movdige-ventana.c: Ditto.
	* gcc.target/riscv/movdige-zicond.c: Ditto.
	* gcc.target/riscv/movdige.c: Ditto.
	* gcc.target/riscv/movdigeu-sfb.c: Ditto.
	* gcc.target/riscv/movdigeu-thead.c: Ditto.
	* gcc.target/riscv/movdigeu-ventana.c: Ditto.
	* gcc.target/riscv/movdigeu-zicond.c: Ditto.
	* gcc.target/riscv/movdigeu.c: Ditto.
	* gcc.target/riscv/movdigt-sfb.c: Ditto.
	* gcc.target/riscv/movdigt-thead.c: Ditto.
	* gcc.target/riscv/movdigt-ventana.c: Ditto.
	* gcc.target/riscv/movdigt-zicond.c: Ditto.
	* gcc.target/riscv/movdigt.c: Ditto.
	* gcc.target/riscv/movdigtu-sfb.c: Ditto.
	* gcc.target/riscv/movdigtu-thead.c: Ditto.
	* gcc.target/riscv/movdigtu-ventana.c: Ditto.
	* gcc.target/riscv/movdigtu-zicond.c: Ditto.
	* gcc.target/riscv/movdigtu.c: Ditto.
	* gcc.target/riscv/movdile-sfb.c: Ditto.
	* gcc.target/riscv/movdile-thead.c: Ditto.
	* gcc.target/riscv/movdile-ventana.c: Ditto.
	* gcc.target/riscv/movdile-zicond.c: Ditto.
	* gcc.target/riscv/movdile.c: Ditto.
	* gcc.target/riscv/movdileu-sfb.c: Ditto.
	* gcc.target/riscv/movdileu-thead.c: Ditto.
	* gcc.target/riscv/movdileu-ventana.c: Ditto.
	* gcc.target/riscv/movdileu-zicond.c: Ditto.
	* gcc.target/riscv/movdileu.c: Ditto.
	* gcc.target/riscv/movdilt-sfb.c: Ditto.
	* gcc.target/riscv/movdilt-thead.c: Ditto.
	* gcc.target/riscv/movdilt-ventana.c: Ditto.
	* gcc.target/riscv/movdilt-zicond.c: Ditto.
	* gcc.target/riscv/movdilt.c: Ditto.
	* gcc.target/riscv/movdiltu-sfb.c: Ditto.
	* gcc.target/riscv/movdiltu-thead.c: Ditto.
	* gcc.target/riscv/movdiltu-ventana.c: Ditto.
	* gcc.target/riscv/movdiltu-zicond.c: Ditto.
	* gcc.target/riscv/movdiltu.c: Ditto.
	* gcc.target/riscv/movdine-sfb.c: Ditto.
	* gcc.target/riscv/movdine-thead.c: Ditto.
	* gcc.target/riscv/movdine-ventana.c: Ditto.
	* gcc.target/riscv/movdine-zicond.c: Ditto.
	* gcc.target/riscv/movdine.c: Ditto.
	* gcc.target/riscv/movsibeq-thead.c: Ditto.
	* gcc.target/riscv/movsibeq-ventana.c: Ditto.
	* gcc.target/riscv/movsibeq-zicond.c: Ditto.
	* gcc.target/riscv/movsibeq.c: Ditto.
	* gcc.target/riscv/movsibfeq-ventana.c: Ditto.
	* gcc.target/riscv/movsibfeq-zicond.c: Ditto.
	* gcc.target/riscv/movsibfeq.c: Ditto.
	* gcc.target/riscv/movsibfge-ventana.c: Ditto.
	* gcc.target/riscv/movsibfge-zicond.c: Ditto.
	* gcc.target/riscv/movsibfge.c: Ditto.
	* gcc.target/riscv/movsibfgt-ventana.c: Ditto.
	* gcc.target/riscv/movsibfgt-zicond.c: Ditto.
	* gcc.target/riscv/movsibfgt.c: Ditto.
	* gcc.target/riscv/movsibfle-ventana.c: Ditto.
	* gcc.target/riscv/movsibfle-zicond.c: Ditto.
	* gcc.target/riscv/movsibfle.c: Ditto.
	* gcc.target/riscv/movsibflt-ventana.c: Ditto.
	* gcc.target/riscv/movsibflt-zicond.c: Ditto.
	* gcc.target/riscv/movsibflt.c: Ditto.
	* gcc.target/riscv/movsibfne-ventana.c: Ditto.
	* gcc.target/riscv/movsibfne-zicond.c: Ditto.
	* gcc.target/riscv/movsibfne.c: Ditto.
	* gcc.target/riscv/movsibge-thead.c: Ditto.
	* gcc.target/riscv/movsibge-ventana.c: Ditto.
	* gcc.target/riscv/movsibge-zicond.c: Ditto.
	* gcc.target/riscv/movsibge.c: Ditto.
	* gcc.target/riscv/movsibgeu-thead.c: Ditto.
	* gcc.target/riscv/movsibgeu-ventana.c: Ditto.
	* gcc.target/riscv/movsibgeu-zicond.c: Ditto.
	* gcc.target/riscv/movsibgeu.c: Ditto.
	* gcc.target/riscv/movsibgt-thead.c: Ditto.
	* gcc.target/riscv/movsibgt-ventana.c: Ditto.
	* gcc.target/riscv/movsibgt-zicond.c: Ditto.
	* gcc.target/riscv/movsibgt.c: Ditto.
	* gcc.target/riscv/movsibgtu-thead.c: Ditto.
	* gcc.target/riscv/movsibgtu-ventana.c: Ditto.
	* gcc.target/riscv/movsibgtu-zicond.c: Ditto.
	* gcc.target/riscv/movsibgtu.c: Ditto.
	* gcc.target/riscv/movsible-thead.c: Ditto.
	* gcc.target/riscv/movsible-ventana.c: Ditto.
	* gcc.target/riscv/movsible-zicond.c: Ditto.
	* gcc.target/riscv/movsible.c: Ditto.
	* gcc.target/riscv/movsibleu-thead.c: Ditto.
	* gcc.target/riscv/movsibleu-ventana.c: Ditto.
	* gcc.target/riscv/movsibleu-zicond.c: Ditto.
	* gcc.target/riscv/movsibleu.c: Ditto.
	* gcc.target/riscv/movsiblt-thead.c: Ditto.
	* gcc.target/riscv/movsiblt-ventana.c: Ditto.
	* gcc.target/riscv/movsiblt-zicond.c: Ditto.
	* gcc.target/riscv/movsiblt.c: Ditto.
	* gcc.target/riscv/movsibltu-thead.c: Ditto.
	* gcc.target/riscv/movsibltu-ventana.c: Ditto.
	* gcc.target/riscv/movsibltu-zicond.c: Ditto.
	* gcc.target/riscv/movsibltu.c: Ditto.
	* gcc.target/riscv/movsibne-thead.c: Ditto.
	* gcc.target/riscv/movsibne-ventana.c: Ditto.
	* gcc.target/riscv/movsibne-zicond.c: Ditto.
	* gcc.target/riscv/movsibne.c: Ditto.
	* gcc.target/riscv/movsieq-sfb.c: Ditto.
	* gcc.target/riscv/movsieq-thead.c: Ditto.
	* gcc.target/riscv/movsieq-ventana.c: Ditto.
	* gcc.target/riscv/movsieq-zicond.c: Ditto.
	* gcc.target/riscv/movsieq.c: Ditto.
	* gcc.target/riscv/movsifeq-sfb.c: Ditto.
	* gcc.target/riscv/movsifeq-thead.c: Ditto.
	* gcc.target/riscv/movsifeq-ventana.c: Ditto.
	* gcc.target/riscv/movsifeq-zicond.c: Ditto.
	* gcc.target/riscv/movsifeq.c: Ditto.
	* gcc.target/riscv/movsifge-sfb.c: Ditto.
	* gcc.target/riscv/movsifge-thead.c: Ditto.
	* gcc.target/riscv/movsifge-ventana.c: Ditto.
	* gcc.target/riscv/movsifge-zicond.c: Ditto.
	* gcc.target/riscv/movsifge.c: Ditto.
	* gcc.target/riscv/movsifgt-sfb.c: Ditto.
	* gcc.target/riscv/movsifgt-thead.c: Ditto.
	* gcc.target/riscv/movsifgt-ventana.c: Ditto.
	* gcc.target/riscv/movsifgt-zicond.c: Ditto.
	* gcc.target/riscv/movsifgt.c: Ditto.
	* gcc.target/riscv/movsifle-sfb.c: Ditto.
	* gcc.target/riscv/movsifle-thead.c: Ditto.
	* gcc.target/riscv/movsifle-ventana.c: Ditto.
	* gcc.target/riscv/movsifle-zicond.c: Ditto.
	* gcc.target/riscv/movsifle.c: Ditto.
	* gcc.target/riscv/movsiflt-sfb.c: Ditto.
	* gcc.target/riscv/movsiflt-thead.c: Ditto.
	* gcc.target/riscv/movsiflt-ventana.c: Ditto.
	* gcc.target/riscv/movsiflt-zicond.c: Ditto.
	* gcc.target/riscv/movsiflt.c: Ditto.
	* gcc.target/riscv/movsifne-sfb.c: Ditto.
	* gcc.target/riscv/movsifne-thead.c: Ditto.
	* gcc.target/riscv/movsifne-ventana.c: Ditto.
	* gcc.target/riscv/movsifne-zicond.c: Ditto.
	* gcc.target/riscv/movsifne.c: Ditto.
	* gcc.target/riscv/movsige-sfb.c: Ditto.
	* gcc.target/riscv/movsige-thead.c: Ditto.
	* gcc.target/riscv/movsige-ventana.c: Ditto.
	* gcc.target/riscv/movsige-zicond.c: Ditto.
	* gcc.target/riscv/movsige.c: Ditto.
	* gcc.target/riscv/movsigeu-sfb.c: Ditto.
	* gcc.target/riscv/movsigeu-thead.c: Ditto.
	* gcc.target/riscv/movsigeu-ventana.c: Ditto.
	* gcc.target/riscv/movsigeu-zicond.c: Ditto.
	* gcc.target/riscv/movsigeu.c: Ditto.
	* gcc.target/riscv/movsigt-sfb.c: Ditto.
	* gcc.target/riscv/movsigt-thead.c: Ditto.
	* gcc.target/riscv/movsigt-ventana.c: Ditto.
	* gcc.target/riscv/movsigt-zicond.c: Ditto.
	* gcc.target/riscv/movsigt.c: Ditto.
	* gcc.target/riscv/movsigtu-sfb.c: Ditto.
	* gcc.target/riscv/movsigtu-thead.c: Ditto.
	* gcc.target/riscv/movsigtu-ventana.c: Ditto.
	* gcc.target/riscv/movsigtu-zicond.c: Ditto.
	* gcc.target/riscv/movsigtu.c: Ditto.
	* gcc.target/riscv/movsile-sfb.c: Ditto.
	* gcc.target/riscv/movsile-thead.c: Ditto.
	* gcc.target/riscv/movsile-ventana.c: Ditto.
	* gcc.target/riscv/movsile-zicond.c: Ditto.
	* gcc.target/riscv/movsile.c: Ditto.
	* gcc.target/riscv/movsileu-sfb.c: Ditto.
	* gcc.target/riscv/movsileu-thead.c: Ditto.
	* gcc.target/riscv/movsileu-ventana.c: Ditto.
	* gcc.target/riscv/movsileu-zicond.c: Ditto.
	* gcc.target/riscv/movsileu.c: Ditto.
	* gcc.target/riscv/movsilt-sfb.c: Ditto.
	* gcc.target/riscv/movsilt-thead.c: Ditto.
	* gcc.target/riscv/movsilt-ventana.c: Ditto.
	* gcc.target/riscv/movsilt-zicond.c: Ditto.
	* gcc.target/riscv/movsilt.c: Ditto.
	* gcc.target/riscv/movsiltu-sfb.c: Ditto.
	* gcc.target/riscv/movsiltu-thead.c: Ditto.
	* gcc.target/riscv/movsiltu-ventana.c: Ditto.
	* gcc.target/riscv/movsiltu-zicond.c: Ditto.
	* gcc.target/riscv/movsiltu.c: Ditto.
	* gcc.target/riscv/movsine-sfb.c: Ditto.
	* gcc.target/riscv/movsine-thead.c: Ditto.
	* gcc.target/riscv/movsine-ventana.c: Ditto.
	* gcc.target/riscv/movsine-zicond.c: Ditto.
	* gcc.target/riscv/movsine.c: Ditto.
	* gcc.target/riscv/pr111501.c: Ditto.
	* gcc.target/riscv/pr115921.c: Ditto.
	* gcc.target/riscv/pr116033.c: Ditto.
	* gcc.target/riscv/pr116035-1.c: Ditto.
	* gcc.target/riscv/pr116035-2.c: Ditto.
	* gcc.target/riscv/pr116131.c: Ditto.
	* gcc.target/riscv/reg_subreg_costs.c: Ditto.
	* gcc.target/riscv/rvv/autovec/vls-vlmax/shuffle-slide.c: Ditto.
	* gcc.target/riscv/rvv/xtheadvector.c: Ditto.
	* gcc.target/riscv/rvv/xtheadvector/pr114194.c: Ditto.
	* gcc.target/riscv/sign-extend-rshift-32.c: Ditto.
	* gcc.target/riscv/sign-extend-rshift-64.c: Ditto.
	* gcc.target/riscv/sign-extend-rshift.c: Ditto.
	* gcc.target/riscv/synthesis-1.c: Ditto.
	* gcc.target/riscv/synthesis-10.c: Ditto.
	* gcc.target/riscv/synthesis-11.c: Ditto.
	* gcc.target/riscv/synthesis-12.c: Ditto.
	* gcc.target/riscv/synthesis-13.c: Ditto.
	* gcc.target/riscv/synthesis-14.c: Ditto.
	* gcc.target/riscv/synthesis-15.c: Ditto.
	* gcc.target/riscv/synthesis-16.c: Ditto.
	* gcc.target/riscv/synthesis-2.c: Ditto.
	* gcc.target/riscv/synthesis-3.c: Ditto.
	* gcc.target/riscv/synthesis-4.c: Ditto.
	* gcc.target/riscv/synthesis-5.c: Ditto.
	* gcc.target/riscv/synthesis-6.c: Ditto.
	* gcc.target/riscv/synthesis-7.c: Ditto.
	* gcc.target/riscv/synthesis-8.c: Ditto.
	* gcc.target/riscv/synthesis-9.c: Ditto.
	* gcc.target/riscv/target-attr-16.c: Ditto.
	* gcc.target/riscv/target-attr-norelax.c: Ditto.
	* gcc.target/riscv/xtheadba-addsl.c: Ditto.
	* gcc.target/riscv/xtheadba.c: Ditto.
	* gcc.target/riscv/xtheadbb-ext-1.c: Ditto.
	* gcc.target/riscv/xtheadbb-ext-2.c: Ditto.
	* gcc.target/riscv/xtheadbb-ext-3.c: Ditto.
	* gcc.target/riscv/xtheadbb-ext.c: Ditto.
	* gcc.target/riscv/xtheadbb-extu-1.c: Ditto.
	* gcc.target/riscv/xtheadbb-extu-2.c: Ditto.
	* gcc.target/riscv/xtheadbb-extu-4.c: Ditto.
	* gcc.target/riscv/xtheadbb-extu.c: Ditto.
	* gcc.target/riscv/xtheadbb-ff1.c: Ditto.
	* gcc.target/riscv/xtheadbb-rev.c: Ditto.
	* gcc.target/riscv/xtheadbb-srri.c: Ditto.
	* gcc.target/riscv/xtheadbb-strcmp.c: Ditto.
	* gcc.target/riscv/xtheadbb-strlen-unaligned.c: Ditto.
	* gcc.target/riscv/xtheadbb-strlen.c: Ditto.
	* gcc.target/riscv/xtheadbb.c: Ditto.
	* gcc.target/riscv/xtheadbs-tst.c: Ditto.
	* gcc.target/riscv/xtheadbs.c: Ditto.
	* gcc.target/riscv/xtheadcmo.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-indirect.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mveqz-imm-eqz.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mveqz-imm-not.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mveqz-reg-eqz.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mveqz-reg-not.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mvnez-imm-cond.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mvnez-imm-nez.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mvnez-reg-cond.c: Ditto.
	* gcc.target/riscv/xtheadcondmov-mvnez-reg-nez.c: Ditto.
	* gcc.target/riscv/xtheadcondmov.c: Ditto.
	* gcc.target/riscv/xtheadfmemidx-without-xtheadmemidx.c: Ditto.
	* gcc.target/riscv/xtheadfmemidx.c: Ditto.
	* gcc.target/riscv/xtheadfmv.c: Ditto.
	* gcc.target/riscv/xtheadint.c: Ditto.
	* gcc.target/riscv/xtheadmac-mula-muls.c: Ditto.
	* gcc.target/riscv/xtheadmac.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-index-update.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-index-xtheadbb-update.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-index-xtheadbb.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-index.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-modify-xtheadbb.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-modify.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-uindex-update.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-uindex-xtheadbb-update.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-uindex-xtheadbb.c: Ditto.
	* gcc.target/riscv/xtheadmemidx-uindex.c: Ditto.
	* gcc.target/riscv/xtheadmemidx.c: Ditto.
	* gcc.target/riscv/xtheadmempair-1.c: Ditto.
	* gcc.target/riscv/xtheadmempair-2.c: Ditto.
	* gcc.target/riscv/xtheadmempair-3.c: Ditto.
	* gcc.target/riscv/xtheadmempair-4.c: Ditto.
	* gcc.target/riscv/xtheadmempair-interrupt-fcsr.c: Ditto.
	* gcc.target/riscv/xtheadmempair.c: Ditto.
	* gcc.target/riscv/xtheadsync.c: Ditto.
	* gcc.target/riscv/za-ext.c: Ditto.
	* gcc.target/riscv/zawrs.c: Ditto.
	* gcc.target/riscv/zbb-strcmp-disabled-2.c: Ditto.
	* gcc.target/riscv/zbb-strcmp-disabled.c: Ditto.
	* gcc.target/riscv/zbb-strcmp-limit.c: Ditto.
	* gcc.target/riscv/zbb-strcmp-unaligned.c: Ditto.
	* gcc.target/riscv/zbb-strcmp.c: Ditto.
	* gcc.target/riscv/zbb-strlen-disabled-2.c: Ditto.
	* gcc.target/riscv/zbb-strlen-disabled.c: Ditto.
	* gcc.target/riscv/zbb-strlen-unaligned.c: Ditto.
	* gcc.target/riscv/zbb-strlen.c: Ditto.
	* gcc.target/riscv/zero-extend-rshift-32.c: Ditto.
	* gcc.target/riscv/zero-extend-rshift-64.c: Ditto.
	* gcc.target/riscv/zero-extend-rshift.c: Ditto.
	* gcc.target/riscv/zi-ext.c: Ditto.
	* gcc.target/riscv/zvbb.c: Ditto.
	* gcc.target/riscv/zvbc.c: Ditto.
	* gcc.target/riscv/zvkb.c: Ditto.
	* gcc.target/riscv/zvkg.c: Ditto.
	* gcc.target/riscv/zvkn-1.c: Ditto.
	* gcc.target/riscv/zvkn.c: Ditto.
	* gcc.target/riscv/zvknc-1.c: Ditto.
	* gcc.target/riscv/zvknc-2.c: Ditto.
	* gcc.target/riscv/zvknc.c: Ditto.
	* gcc.target/riscv/zvkned.c: Ditto.
	* gcc.target/riscv/zvkng-1.c: Ditto.
	* gcc.target/riscv/zvkng-2.c: Ditto.
	* gcc.target/riscv/zvkng.c: Ditto.
	* gcc.target/riscv/zvknha.c: Ditto.
	* gcc.target/riscv/zvknhb.c: Ditto.
	* gcc.target/riscv/zvks-1.c: Ditto.
	* gcc.target/riscv/zvks.c: Ditto.
	* gcc.target/riscv/zvksc-1.c: Ditto.
	* gcc.target/riscv/zvksc-2.c: Ditto.
	* gcc.target/riscv/zvksc.c: Ditto.
	* gcc.target/riscv/zvksed.c: Ditto.
	* gcc.target/riscv/zvksg-1.c: Ditto.
	* gcc.target/riscv/zvksg-2.c: Ditto.
	* gcc.target/riscv/zvksg.c: Ditto.
	* gcc.target/riscv/zvksh.c: Ditto.
	* gcc.target/riscv/zvkt.c: Ditto.

2025-01-07  Dimitar Dimitrov  <dimitar@dinux.eu>

	* gcc.target/riscv/pr109508.c: Skip for E ABI.
	* gcc.target/riscv/pr114139.c: Ditto.

2025-01-07  Dimitar Dimitrov  <dimitar@dinux.eu>

	* gcc.target/riscv/rvv/autovec/binop/vandn-1.c: Skip if default
	is E ABI.
	* gcc.target/riscv/rvv/autovec/binop/vrolr-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/binop/vwsll-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/binop/vwsll-template.h: Ditto.
	* gcc.target/riscv/rvv/autovec/gather-scatter/gather_load_64-12-zvbb.c: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/clz-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/ctz-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/popcount-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/popcount-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/popcount-3.c: Ditto.
	* gcc.target/riscv/rvv/base/cmpmem-1.c: Ditto.
	* gcc.target/riscv/rvv/base/cmpmem-3.c: Ditto.
	* gcc.target/riscv/rvv/base/cmpmem-4.c: Ditto.
	* gcc.target/riscv/rvv/base/cpymem-1.c: Ditto.
	* gcc.target/riscv/rvv/base/cpymem-2.c: Ditto.
	* gcc.target/riscv/rvv/base/cpymem-3.c: Ditto.
	* gcc.target/riscv/rvv/base/movmem-1.c: Ditto.
	* gcc.target/riscv/rvv/base/pr115068.c: Ditto.
	* gcc.target/riscv/rvv/base/setmem-1.c: Ditto.
	* gcc.target/riscv/rvv/base/setmem-2.c: Ditto.
	* gcc.target/riscv/rvv/base/setmem-3.c: Ditto.
	* gcc.target/riscv/rvv/base/vwaddsub-1.c: Ditto.

2025-01-07  Dimitar Dimitrov  <dimitar@dinux.eu>

	* lib/target-supports.exp (check_effective_target_riscv_abi_e):
	New procedure.

2025-01-07  Wilco Dijkstra  <wilco.dijkstra@arm.com>

	* gcc.dg/guality/pr36728-3.c: Remove XFAIL.
	* gcc.dg/guality/pr68860-1.c: Likewise.
	* gcc.dg/guality/pr68860-2.c: Likewise.
	* gcc.target/aarch64/ldp_aligned.c: Fix test.
	* gcc.target/aarch64/ldp_always.c: Likewise.
	* gcc.target/aarch64/ldp_stp_10.c: Add -fschedule-insns.
	* gcc.target/aarch64/ldp_stp_12.c: Likewise.
	* gcc.target/aarch64/ldp_stp_13.c: Remove test.
	* gcc.target/aarch64/ldp_stp_21.c: Add -fschedule-insns.
	* gcc.target/aarch64/ldp_stp_8.c: Likewise.
	* gcc.target/aarch64/ldp_vec_v2sf.c: Likewise.
	* gcc.target/aarch64/ldp_vec_v2si.c: Likewise.
	* gcc.target/aarch64/test_frame_16.c: Fix test.
	* gcc.target/aarch64/sve/vcond_12.c: Add -fschedule-insns.
	* gcc.target/aarch64/sve/acle/general/ldff1_3.c: Likewise.

2025-01-07  Wilco Dijkstra  <wilco.dijkstra@arm.com>

	* gcc.target/aarch64/dbl_mov_immediate_1.c: Add xfail for -0.0.
	* gcc.target/aarch64/fmul_scvtf_1.c: Fixup test cases, add xfail,
	reduce duplication.

2025-01-07  Paul-Antoine Arras  <parras@baylibre.com>

	* c-c++-common/gomp/adjust-args-4.c: New test.

2025-01-07  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/114932
	* gcc.dg/tree-ssa/pr64705.c: Update dump file scan.
	* gcc.target/i386/pr115462.c: The testcase shares 3 IVs which calculates
	the same thing but with a slightly different increment offset.  The test
	checks for 3 complex addressing loads, one for each IV.  But with this
	change they now all share one IV.  That is the loop now only has one
	complex addressing.  This is ultimately driven by the backend costing
	and the current costing says this is preferred so updating the testcase.
	* gfortran.dg/addressing-modes_1.f90: New test.

2025-01-07  Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/105769
	* g++.dg/torture/pr105769-1.C: New test.

2025-01-07  Andrew Pinski  <quic_apinski@quicinc.com>

	PR middle-end/117426
	PR middle-end/111422
	* gcc.dg/torture/pr117426-1.c: New test.

2025-01-07  Jeff Law  <jlaw@ventanamicro.com>

	PR testsuite/118055
	* gcc.dg/tree-ssa/pr83403-1.c: Add m68k*-*-* to targets needing
	additional arguments for peeling.
	* gcc.dg/tree-ssa/pr83403-2.c: Similarly.

2025-01-07  Richard Biener  <rguenther@suse.de>

	* gcc.dg/torture/convert-dfp-2.c: Skip with -flto.
	* gcc.dg/torture/convert-dfp.c: Likewise.

2025-01-07  Tsung Chun Lin  <tclin914@gmail.com>

	* gcc.target/riscv/rvv/rvv.exp: Add dg-runtest to run the
	testcase under gcc.target/riscv/rvv/.

2025-01-07  Andre Vehreschild  <vehre@gcc.gnu.org>

	* gfortran.dg/alloc_comp_deep_copy_4.f03: New test.

2025-01-07  Deng Jianbo  <dengjianbo@loongson.cn>

	* gcc.target/loongarch/mov-zero-1.c: New test.
	* gcc.target/loongarch/mov-zero-2.c: New test.

2025-01-07  Andre Vehreschild  <vehre@gcc.gnu.org>

	* gfortran.dg/class_array_15.f03: Freeing more memory.
	* gfortran.dg/recursive_alloc_comp_6.f90: New test.

2025-01-07  Jennifer Schmitz  <jschmitz@nvidia.com>

	* gcc.target/aarch64/sve/strided_load_2.c: Adjust expected outcome.
	* gcc.target/aarch64/sve/strided_store_2.c: Likewise.

2025-01-07  Sam James  <sam@gentoo.org>

	PR ipa/98000
	* g++.dg/ipa/pr98000.C: New test.

2025-01-07  Sam James  <sam@gentoo.org>

	PR ipa/117546
	* gcc.dg/torture/pr117546.c: New test.

2025-01-06  Alexandre Oliva  <oliva@adacore.com>

	PR middle-end/118006
	* gcc.target/i386/strub-pr118006.c: New.

2025-01-06  Akram Ahmad  <Akram.Ahmad@arm.com>

	* gcc.target/aarch64/sve/truncated_concatenation_1.c: new test
	for the above example and other modes covered by insn
	definitions.

2025-01-06  Jennifer Schmitz  <jschmitz@nvidia.com>

	* gcc.target/aarch64/sve/acle/asm/mul_u8.c: Adjust expected outcome.
	* gcc.target/aarch64/sve/acle/asm/mul_u16.c: Likewise.
	* gcc.target/aarch64/sve/acle/asm/mul_u32.c: Likewise.
	* gcc.target/aarch64/sve/acle/asm/mul_u64.c: New test and adjust
	expected outcome.

2025-01-06  Tamar Christina  <tamar.christina@arm.com>

	PR target/96342
	PR target/118272
	* gcc.target/aarch64/vect-simd-clone-3.c: New test.

2025-01-06  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/118224
	* gcc.dg/pr118224.c: New test.
	* c-c++-common/ubsan/vla-1.c (bar): Use noipa attribute instead
	of noinline, noclone.

2025-01-06  Kito Cheng  <kito.cheng@sifive.com>

	* gcc.target/riscv/rvv/fortran/pr111395.f90: Move this file to...
	* gfortran.target/riscv/rvv/pr111395.f90: ...here.
	* gcc.target/riscv/rvv/fortran/pr111566.f90: Move this file to...
	* gfortran.target/riscv/rvv/pr111566.f90: ...here.
	* gcc.target/riscv/rvv/rvv-fortran.exp: Move this file to...
	* gfortran.target/riscv/rvv/rvv.exp: ...here.

2025-01-05  Iain Buclaw  <ibuclaw@symmetryinvestments.com>

	* gdc.dg/torture/pr96435.d: Add dg-warning.

2025-01-05  Iain Buclaw  <ibuclaw@gdcproject.org>

	* gdc.dg/torture/pr110406.d: Add -fno-moduleinfo to dg-options.

2025-01-04  Hans-Peter Nilsson  <hp@axis.com>

	* gcc.dg/tree-ssa/vector-4.c: Replace MMIX adjustments with
	TARGET_CALLEE_COPIES-agnostic adjustments.
	* gcc.dg/tree-ssa/forwprop-36.c: Ditto.  Correct pattern to match a
	literal ".".

2025-01-03  Richard Sandiford  <richard.sandiford@arm.com>

	PR rtl-optimization/117938
	* gcc.dg/torture/pr117938.c: New test.

2025-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR c++/118275
	* g++.dg/cpp/embed-18.C: New test.
	* g++.dg/ext/flexary41.C: New test.

2025-01-03  Sam James  <sam@gentoo.org>
	    Andrew Pinski  <pinskia@gmail.com>

	* gcc.dg/torture/dse-trivial-auto-var-init.c: New test.

2025-01-03  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/106692
	* gfortran.dg/cray_pointers_13.f90: New test.

2025-01-03  Jose E. Marchesi  <jose.marchesi@oracle.com>

	* gcc.target/bpf/diag-funargs-2.c: Use -ffreestanding.
	* gcc.target/bpf/helper-skb-ancestor-cgroup-id.c: Likewise.
	* gcc.target/bpf/helper-bind.c: Likewise.
	* gcc.target/bpf/diag-funargs-3.c: Likewise.

2025-01-02  Tobias Burnus  <tburnus@baylibre.com>

	* gfortran.dg/gomp/adjust-args-10.f90: New test.

2025-01-02  Paul-Antoine Arras  <parras@baylibre.com>

	* g++.dg/gomp/dispatch-3.C: Update scan dumps.
	* gfortran.dg/gomp/declare-variant-2.f90: Update dg-error.
	* gfortran.dg/gomp/adjust-args-1.f90: New test.
	* gfortran.dg/gomp/adjust-args-2.f90: New test.
	* gfortran.dg/gomp/adjust-args-2a.f90: New test.
	* gfortran.dg/gomp/adjust-args-3.f90: New test.
	* gfortran.dg/gomp/adjust-args-4.f90: New test.
	* gfortran.dg/gomp/adjust-args-5.f90: New test.
	* gfortran.dg/gomp/adjust-args-6.f90: New test.
	* gfortran.dg/gomp/adjust-args-7.f90: New test.
	* gfortran.dg/gomp/adjust-args-8.f90: New test.
	* gfortran.dg/gomp/adjust-args-9.f90: New test.
	* gfortran.dg/gomp/dispatch-1.f90: New test.
	* gfortran.dg/gomp/dispatch-2.f90: New test.
	* gfortran.dg/gomp/dispatch-3.f90: New test.
	* gfortran.dg/gomp/dispatch-4.f90: New test.
	* gfortran.dg/gomp/dispatch-5.f90: New test.
	* gfortran.dg/gomp/dispatch-6.f90: New test.
	* gfortran.dg/gomp/dispatch-7.f90: New test.
	* gfortran.dg/gomp/dispatch-8.f90: New test.
	* gfortran.dg/gomp/dispatch-9.f90: New test.
	* gfortran.dg/gomp/dispatch-9a.f90: New test.
	* gfortran.dg/gomp/dispatch-10.f90: New test.

2025-01-02  David Malcolm  <dmalcolm@redhat.com>

	PR c/117629
	* gcc.dg/auto-type-2.c: Update expected output with _Bool.
	* gcc.dg/c23-bool-errors-1.c: New test.
	* gcc.dg/c23-bool-errors-2.c: New test.
	* gcc.dg/c23-bool-errors-3.c: New test.

2025-01-02  Richard Sandiford  <richard.sandiford@arm.com>

	PR target/118184
	* gcc.dg/torture/pr118184.c: Use _Float128 instead of long double.

2025-01-02  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/118171
	* gcc.dg/torture/pr118171.c: New testcase.

2025-01-02  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.dg/torture/pr118184.c: New test.

2025-01-02  Jakub Jelinek  <jakub@redhat.com>

	* gcc.dg/pr90838-2.c: New test.

2025-01-02  xuli  <xuli1@eswincomputing.com>

	* gcc.target/riscv/rvv/autovec/sat/vec_sat_arith.h: add unsigned imm vec sat_sub form2~4.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_data.h: add data for vec sat_sub.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-2-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-2-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-2-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-2-u8.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-3-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-3-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-3-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-3-u8.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-4-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-4-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-4-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-4-u8.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-2-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-2-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-2-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-2-u8.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-3-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-3-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-3-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-3-u8.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-4-u16.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-4-u32.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-4-u64.c: New test.
	* gcc.target/riscv/rvv/autovec/sat/vec_sat_u_sub_imm-run-4-u8.c: New test.

2025-01-02  Guo Jie  <guojie@loongson.cn>

	* gcc.target/loongarch/conditional-move-opt-1.c: New test.
	* gcc.target/loongarch/conditional-move-opt-2.c: New test.

2025-01-02  Guo Jie  <guojie@loongson.cn>

	* gcc.target/loongarch/abd-lasx.c: New test.
	* gcc.target/loongarch/abd-lsx.c: New test.

2025-01-02  Guo Jie  <guojie@loongson.cn>

	* gcc.target/loongarch/vec_pack_unpack_128.c: New test.
	* gcc.target/loongarch/vec_pack_unpack_256.c: New test.

2025-01-02  Guo Jie  <guojie@loongson.cn>

	* gcc.target/loongarch/bstrpick_alsl_paired.c: New test.
	* gcc.target/loongarch/bytepick_combine.c: New test.

2025-01-01  Richard Biener  <rguenther@suse.de>

	PR middle-end/118174
	* gcc.dg/torture/pr118174.c: New testcase.

Copyright (C) 2025 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
