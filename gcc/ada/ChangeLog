2023-01-03  Ghjuvan Lacambre  <lacambre@adacore.com>

	* errout.adb (Write_JSON_Span): Escape subprogram name.

2023-01-03  Ghjuvan Lacambre  <lacambre@adacore.com>

	* output.adb (Write_Buffer): Use Flush_Buffer instead of Write_Eol.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb (P_Flt_Format): Add "*" syntax handling.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb (P_Int_Format): Fix parsing bug.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Expand_Simple_Function_Return): Make sure that a
	captured function call also verifies Is_Related_To_Func_Return.
	Do not generate an actual subtype for special return objects.
	* exp_util.ads (Is_Related_To_Func_Return): Add commentary.

2023-01-03  Ronan Desplanques  <desplanques@adacore.com>

	* libgnat/g-forstr.adb
	(Advance_And_Accumulate_Until_Next_Specifier): New procedure.
	("-"): Replace inline code with call to
	Advance_And_Accumulate_Until_Next_Specifier.
	(Next_Format): likewise.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* checks.adb (Apply_Discriminant_Check.Denotes_Explicit_Dereference):
	Return false for artificial dereferences generated by the expander.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_ch6.adb (Is_Build_In_Place_Function): Adjust comment.
	* sem_util.adb (Compute_Returns_By_Ref): Do not set Returns_By_Ref
	on functions with foreign convention.

2023-01-03  Marc Poulhi√®s  <poulhies@adacore.com>

	* exp_aggr.adb (Build_Assignment_With_Temporary): New.
	(Expand_Array_Aggregate): Tune backend optimization
	and insert a temporary in the case of an access with
	Designated_Storage_Model aspect.
	(Convert_Array_Aggr_In_Allocator): Likewise.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_res.adb (Resolve_Membership_Op): Adjust again latest change.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* sem_util.ads (Set_Debug_Info_Defining_Id): Adjust comment.
	* sem_util.adb (Is_Aliased_View) <N_Explicit_Dereference>: Return
	false for more artificial dereferences generated by the expander.
	(Set_Debug_Info_Defining_Id): Set Debug_Info_Needed unconditionally
	in -gnatD mode.
	* exp_ch6.adb (Replace_Renaming_Declaration_Id): Also preserve the
	Is_Aliased flag.

2023-01-03  Joel Brobecker  <brobecker@adacore.com>

	* doc/gnat_ugn/platform_specific_information.rst
	(_Platform_Specific_Information): Minor rewording of intro text.
	* gnat_ugn.texi: Regenerate.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_util.ads (Is_Captured_Function_Call): Declare.
	* exp_util.adb (Is_Captured_Function_Call): New predicate.
	* exp_ch3.adb (Expand_N_Object_Declaration): Use it to detect a
	rewritten function call as the initializing expression.
	* exp_ch6.adb (Expand_Simple_Function_Return): Use it to detect a
	rewritten function call as the returned expression.

2023-01-03  Bob Duff  <duff@adacore.com>

	* exp_util.adb (Integer_Type_For): Assertion and comment.
	(Small_Integer_Type_For): Remove some code and call
	Integer_Type_For instead.
	* sem_util.ads (Rep_To_Pos_Flag): Improve comments. "Standard_..."
	seems overly pedantic here.
	* exp_attr.adb (Succ, Pred): Clean up: make the code as similar as
	possible.
	* exp_ch4.adb: Minor: named notation.

2023-01-03  Javier Miranda  <miranda@adacore.com>

	* ghost.adb (Is_OK_Declaration): A reference to a Ghost entity may
	appear within the class-wide precondition of a helper subprogram.
	This context is treated as suitable because it was already
	verified when we were analyzing the original class-wide
	precondition.

2023-01-03  Eric Botcazou  <ebotcazou@adacore.com>

	* exp_tss.adb (Base_Init_Proc): Do not return the Init_Proc of the
	ancestor type for a derived array type.
	* sem_ch13.adb (Inherit_Aspects_At_Freeze_Point): Factor out the
	common processing done on representation items.
	For Default_Component_Value and Default_Value, look into the first
	subtype to find out the representation items.

2023-01-02  Iain Sandoe  <iain@sandoe.co.uk>

	PR ada/108202
	* gcc-interface/Make-lang.in (GCC_LINKERFLAGS, GCC_LDFLAGS):
	Versions of ALL_LINKERFLAGS, LDFLAGS with -Werror and
	-static-libgcc filtered out for Darwin8 and 9 (-Werror is filtered
	out for other hosts).

2023-01-02  Jakub Jelinek  <jakub@redhat.com>

	* gnat_ugn.texi: Bump @copying's copyright year.
	* gnat_rm.texi: Likewise.


Copyright (C) 2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
