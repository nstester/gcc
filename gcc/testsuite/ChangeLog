2024-01-13  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/67277
	* gfortran.dg/ishftc_optional_size_1.f90: New test.

2024-01-13  John David Anglin  <danglin@gcc.gnu.org>

	* gfortran.dg/fmt_f_default_field_width_3.f90: Add hppa*64*-*-hpux*
	to real_16 dg-error targets.
	* gfortran.dg/fmt_g_default_field_width_3.f90: Likewise.

2024-01-13  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/113305
	* gfortran.dg/do_concurrent_7.f90: New test.

2024-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113361
	* gcc.dg/torture/bitint-47.c: New test.

2024-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113287
	* gcc.dg/vect/vect-early-break_100-pr113287.c: Use long long instead
	of long.

2024-01-13  Jakub Jelinek  <jakub@redhat.com>

	* g++.dg/abi/mangle79.C: New test.

2024-01-13  Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/107823
	PR tree-optimization/110768
	PR tree-optimization/110941
	PR tree-optimization/110450
	PR tree-optimization/110841
	* gcc.dg/tree-ssa/ssa-thread-22.c: New test.
	* gcc.dg/tree-ssa/vrp-loop-1.c: New test.
	* gcc.dg/tree-ssa/vrp-loop-2.c: New test.
	* gcc.dg/tree-ssa/vrp-unreachable-1.c: New test.
	* gcc.dg/tree-ssa/vrp-unreachable-2.c: New test.

2024-01-12  Jason Merrill  <jason@redhat.com>

	PR c++/113038
	* g++.dg/modules/pr106304_b.C: Add dynamic_cast.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1_base_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_bf16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_fp16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_p64_xN_1.c: Updated.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1_base_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_bf16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_fp16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1_p64_xN_1.c: Updated.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1_base_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1_bf16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1_fp16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1_p64_xN_1.c: Add new tests.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1q_base_xN_1.c: Updated
	* gcc.target/arm/simd/vst1q_bf16_xN_1.c: Updated
	* gcc.target/arm/simd/vst1q_fp16_xN_1.c: Updated
	* gcc.target/arm/simd/vst1q_p64_xN_1.c: Updated

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1q_base_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_bf16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_fp16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_p64_xN_1.c: Add new tests.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1q_base_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_bf16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_fp16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1q_p64_xN_1.c: Add new tests.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1_base_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_bf16_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_fp16_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_p64_xN_1.c: Updated.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1_base_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_bf16_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_fp16_xN_1.c: Updated.
	* gcc.target/arm/simd/vst1_p64_xN_1.c: Updated.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vst1_base_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1_bf16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1_fp16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vst1_p64_xN_1.c: Add new tests.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1q_base_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1q_bf16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1q_fp16_xN_1.c: Updated.
	* gcc.target/arm/simd/vld1q_p64_xN_1.c: Updated.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1q_base_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1q_bf16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1q_fp16_xN_1.c: Add new tests.
	* gcc.target/arm/simd/vld1q_p64_xN_1.c: Add new tests.

2024-01-12  Ezra Sitorus  <ezra.sitorus@arm.com>

	* gcc.target/arm/simd/vld1q_base_xN_1.c: Add new test.
	* gcc.target/arm/simd/vld1q_bf16_xN_1.c: Add new test.
	* gcc.target/arm/simd/vld1q_fp16_xN_1.c: Add new test.
	* gcc.target/arm/simd/vld1q_p64_xN_1.c: Add new test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR c/113315
	* gcc.dg/bitint-65.c: New test.
	* gcc.dg/bitint-66.c: New test.

2024-01-12  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113287
	* gcc.dg/vect/vect-early-break_100-pr113287.c: Support non-bitint.
	* gcc.dg/vect/vect-early-break_99-pr113287.c: Likewise.
	* lib/target-supports.exp (bitint, bitint128, bitint575, bitint65535):
	Document them.

2024-01-12  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113178
	* gcc.dg/vect/vect-early-break_101-pr113178.c: New test.
	* gcc.dg/vect/vect-early-break_102-pr113178.c: New test.

2024-01-12  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113237
	* gcc.dg/vect/vect-early-break_98-pr113237.c: New test.

2024-01-12  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113137
	PR tree-optimization/113136
	PR tree-optimization/113172
	PR tree-optimization/113178
	* g++.dg/vect/vect-early-break_4-pr113137.cc: New test.
	* g++.dg/vect/vect-early-break_5-pr113137.cc: New test.
	* gcc.dg/vect/vect-early-break_95-pr113137.c: New test.
	* gcc.dg/vect/vect-early-break_96-pr113136.c: New test.
	* gcc.dg/vect/vect-early-break_97-pr113172.c: New test.

2024-01-12  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113135
	* gcc.dg/vect/vect-early-break_103-pr113135.c: New test.

2024-01-12  Jason Merrill  <jason@redhat.com>

	* g++.dg/cpp2a/concepts-memfun4.C: Change expected
	reversed handling.

2024-01-12  Richard Sandiford  <richard.sandiford@arm.com>

	PR target/113196
	* gcc.target/aarch64/pr113196.c: New test.
	* gcc.target/aarch64/simd/vmovl_high_1.c: Remove double include.
	Expect uxtl2 rather than zip2.
	* gcc.target/aarch64/vect_mixed_sizes_8.c: Expect zip1 rather
	than uxtl.
	* gcc.target/aarch64/vect_mixed_sizes_9.c: Likewise.
	* gcc.target/aarch64/vect_mixed_sizes_10.c: Likewise.

2024-01-12  Richard Sandiford  <richard.sandiford@arm.com>

	PR target/112989
	* gcc.target/aarch64/sve/acle/general-c/clamp_1.c: Remove bogus
	error test.

2024-01-12  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	PR target/113281
	* gcc.target/riscv/rvv/autovec/pr113209.c: Adapt test.
	* gcc.dg/vect/costmodel/riscv/rvv/pr113281-1.c: New test.
	* gcc.dg/vect/costmodel/riscv/rvv/pr113281-2.c: New test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113334
	* gcc.dg/torture/bitint-46.c: New test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113330
	* gcc.dg/bitint-69.c: New test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113323
	* gcc.dg/bitint-68.c: New test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113316
	* gcc.dg/bitint-67.c: New test.

2024-01-12  Guillaume Gomez  <guillaume1.gomez@gmail.com>
	    Antoni Boucher  <bouanto@zoho.com>

	* jit.dg/all-non-failing-tests.h: Add new attributes tests.
	* jit.dg/jit.exp: Add `jit-verify-assembler-output-not` test command.
	* jit.dg/test-restrict-attribute.c: New test.
	* jit.dg/test-alias-attribute.c: New test.
	* jit.dg/test-always_inline-attribute.c: New test.
	* jit.dg/test-cold-attribute.c: New test.
	* jit.dg/test-const-attribute.c: New test.
	* jit.dg/test-noinline-attribute.c: New test.
	* jit.dg/test-nonnull-attribute.c: New test.
	* jit.dg/test-pure-attribute.c: New test.
	* jit.dg/test-used-attribute.c: New test.
	* jit.dg/test-variable-attribute.c: New test.
	* jit.dg/test-weak-attribute.c: New test.

2024-01-12  Jakub Jelinek  <jakub@redhat.com>

	* gcc.dg/bitint-31.c: Fix up #if conditions checking whether
	__*_MANT_DIG__ is equal to a particular precision.

2024-01-12  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/autovec/fold-min-poly.c: Remove -fno-vect-cost-model

2024-01-12  Li Wei  <liwei@loongson.cn>

	* gcc.target/loongarch/sign-extend-2.c: Adjust.

2024-01-12  Li Wei  <liwei@loongson.cn>

	* gcc.target/loongarch/sign-extend.c: Moved to...
	* gcc.target/loongarch/sign-extend-1.c: ...here.
	* gcc.target/loongarch/sign-extend-2.c: New test.

2024-01-11  Julian Brown  <julian@codesourcery.com>

	* gcc.dg/gomp/bad-array-section-c-1.c: New test.
	* gcc.dg/gomp/bad-array-section-c-2.c: New test.
	* gcc.dg/gomp/bad-array-section-c-3.c: New test.
	* gcc.dg/gomp/bad-array-section-c-4.c: New test.
	* gcc.dg/gomp/bad-array-section-c-5.c: New test.
	* gcc.dg/gomp/bad-array-section-c-6.c: New test.
	* gcc.dg/gomp/bad-array-section-c-7.c: New test.
	* gcc.dg/gomp/bad-array-section-c-8.c: New test.

2024-01-11  Jason Merrill  <jason@redhat.com>

	PR c++/113191
	* g++.dg/cpp2a/concepts-memfun4.C: New test.

2024-01-11  Jin Ma  <jinma@linux.alibaba.com>

	* gcc.target/riscv/xtheadfmemidx-medany.c: New test.

2024-01-11  Andrew Pinski  <quic_apinski@quicinc.com>

	PR middle-end/113322
	* gcc.c-torture/compile/pr113322-1.c: New test.

2024-01-11  Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/113301
	* gcc.dg/tree-ssa/divide-8.c: New test.

2024-01-11  Jason Merrill  <jason@redhat.com>

	* g++.dg/cpp23/explicit-obj-diagnostics7.C: Remove xfail.

2024-01-11  Tamar Christina  <tamar.christina@arm.com>

	PR testsuite/113319
	* gcc.dg/bic-bitmask-13.c: Remove -save-temps.
	* gcc.dg/bic-bitmask-14.c: Likewise.
	* gcc.dg/bic-bitmask-15.c: Likewise.
	* gcc.dg/bic-bitmask-16.c: Likewise.
	* gcc.dg/bic-bitmask-17.c: Likewise.
	* gcc.dg/bic-bitmask-18.c: Likewise.
	* gcc.dg/bic-bitmask-19.c: Likewise.
	* gcc.dg/bic-bitmask-20.c: Likewise.
	* gcc.dg/bic-bitmask-21.c: Likewise.
	* gcc.dg/bic-bitmask-22.c: Likewise.
	* gcc.dg/bic-bitmask-7.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_1.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_10.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_2.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_3.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_4.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_5.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_6.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_7.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_8.c: Likewise.
	* gcc.dg/vect/vect-early-break-run_9.c: Likewise.

2024-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/112505
	* gcc.dg/vect/pr112505.c: New testcase.

2024-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/113126
	* gcc.dg/torture/pr113126.c: New testcase.

2024-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/112636
	* gcc.dg/pr112636.c: New testcase.

2024-01-11  Pan Li  <pan2.li@intel.com>

	* gcc.dg/pr30957-1.c: Remove.

2024-01-11  Alex Coplan  <alex.coplan@arm.com>

	PR target/113077
	* gcc.target/aarch64/pr113077.c: New test.

2024-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/111003
	* gcc.dg/tree-ssa/pr111003.c: New testcase.

2024-01-11  Richard Biener  <rguenther@suse.de>

	PR middle-end/112740
	* gcc.dg/pr112740.c: New testcase.

2024-01-11  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/autovec/partial/slp-1.c: Remove xfail.
	* gcc.target/riscv/rvv/autovec/partial/slp-16.c: Ditto.
	* gcc.target/riscv/rvv/autovec/partial/slp-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/partial/slp-5.c: Ditto.

2024-01-11  Lulu Cheng  <chenglulu@loongson.cn>

	* gcc.target/loongarch/sign-extend-bitwise.c: New test.

2024-01-11  liuhongt  <hongtao.liu@intel.com>

	* gcc.target/i386/pr104401.c: New test.
	* gcc.dg/tree-ssa/pr95906.c: Adjust testcase.

2024-01-11  Gaius Mulley  <gaiusmod2@gmail.com>

	PR modula2/112946
	* gm2/pim/fail/badbecomes.mod: New test.
	* gm2/pim/fail/badexpression.mod: New test.
	* gm2/pim/fail/badexpression2.mod: New test.
	* gm2/pim/fail/badifin.mod: New test.
	* gm2/pim/pass/goodifin.mod: New test.

2024-01-10  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/vla_vs_vls-10.c: Fix test.
	* gcc.dg/vect/costmodel/riscv/rvv/vla_vs_vls-11.c: Ditto.
	* gcc.dg/vect/costmodel/riscv/rvv/vla_vs_vls-12.c: Ditto.

2024-01-10  Antoni Boucher  <bouanto@zoho.com>

	PR jit/111396
	* jit.dg/all-non-failing-tests.h: Add note about test-ggc-bugfix.
	* jit.dg/test-ggc-bugfix.c: New test.

2024-01-10  Jin Ma  <jinma@linux.alibaba.com>

	* gcc.target/riscv/xtheadint-push-pop.c: New test.

2024-01-10  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/112468
	* gcc.dg/fold-copysign-1.c: Modify tests based on if target supports
	IFN_COPYSIGN.
	* gcc.dg/pr55152-2.c: Likewise.
	* gcc.dg/tree-ssa/abs-4.c: Likewise.
	* gcc.dg/tree-ssa/backprop-6.c: Likewise.
	* gcc.dg/tree-ssa/copy-sign-2.c: Likewise.
	* gcc.dg/tree-ssa/mult-abs-2.c: Likewise.
	* lib/target-supports.exp (check_effective_target_ifn_copysign): New.

2024-01-10  Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/112581
	* gcc.c-torture/execute/pr112581-1.c: New test.

2024-01-10  Maciej W. Rozycki  <macro@embecosm.com>

	* gcc.target/riscv/pr105314.c: Fix comment termination.

2024-01-10  Maciej W. Rozycki  <macro@embecosm.com>

	* gcc.target/riscv/cset-sext-sfb.c: New test.
	* gcc.target/riscv/cset-sext-thead.c: New test.
	* gcc.target/riscv/cset-sext-ventana.c: New test.
	* gcc.target/riscv/cset-sext-zicond.c: New test.
	* gcc.target/riscv/cset-sext.c: New test.

2024-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/112734
	* gcc.dg/bitint-64.c: New test.

2024-01-10  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113287
	* gcc.dg/vect/vect-early-break_100-pr113287.c: New test.
	* gcc.dg/vect/vect-early-break_99-pr113287.c: New test.

2024-01-10  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/113078
	* gcc.dg/vect/vect-reduc-cond-sub.c: New testcase.
	* gcc.target/i386/vect-pr113078.c: Likewise.

2024-01-10  Julian Brown  <julian@codesourcery.com>

	* g++.dg/gomp/bad-array-section-10.C: Adjust diagnostics for C++23 and
	up.

2024-01-10  Julian Brown  <julian@codesourcery.com>

	* g++.dg/gomp/array-section-1.C: Fix scan output for 32-bit target.
	* g++.dg/gomp/array-section-2.C: Likewise.
	* g++.dg/gomp/bad-array-section-4.C: Adjust error output for 32-bit
	target.

2024-01-10  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113144
	PR tree-optimization/113145
	* gcc.dg/vect/vect-early-break_94-pr113144.c: New test.

2024-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113297
	* gcc.dg/bitint-63.c: Fix PR number.

2024-01-10  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/vect/slp-21.c: Add loongarch.

2024-01-10  chenxiaolong  <chenxiaolong@loongson.cn>

	* lib/target-supports.exp: Removed an issue with "target keyword"
	checking errors on LoongArch architecture.

2024-01-10  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113120
	* gcc.dg/bitint-63.c: New test.

2024-01-10  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/autovec/vls/avg-1.c: Adapt test.
	* gcc.target/riscv/rvv/autovec/vls/avg-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/vls/avg-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/vls/avg-4.c: Ditto.
	* gcc.target/riscv/rvv/autovec/vls/avg-5.c: Ditto.
	* gcc.target/riscv/rvv/autovec/vls/avg-6.c: Ditto.
	* gcc.target/riscv/rvv/autovec/widen/vec-avg-rv32gcv.c: Ditto.
	* gcc.target/riscv/rvv/autovec/widen/vec-avg-rv64gcv.c: Ditto.

2024-01-10  Kewen Lin  <linkw@linux.ibm.com>

	PR testsuite/112751
	* gcc.target/powerpc/pcrel-sibcall-1.c: Replace noinline as noipa.

2024-01-10  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul2-7.c: Add assembler-not check.

2024-01-09  Jason Merrill  <jason@redhat.com>

	* g++.dg/torture/accessor-fixits-9-xobj.C: New test.

2024-01-09  waffl3x  <waffl3x@protonmail.com>

	PR c++/102609
	PR c++/102609
	C++23 P0847R7 (deducing this) - CWG2586.
	* g++.dg/cpp23/explicit-obj-basic6.C: New test.
	* g++.dg/cpp23/explicit-obj-default1.C: New test.
	* g++.dg/cpp23/explicit-obj-default2.C: New test.

2024-01-09  waffl3x  <waffl3x@protonmail.com>

	PR c++/102609
	PR c++/102609
	C++23 P0847R7 (deducing this) - xobj lambdas.
	* g++.dg/cpp23/explicit-obj-diagnostics8.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda1.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda10.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda11.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda12.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda13.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda2.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda3.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda4.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda5.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda6.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda7.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda8.C: New test.
	* g++.dg/cpp23/explicit-obj-lambda9.C: New test.

2024-01-09  waffl3x  <waffl3x@protonmail.com>

	PR c++/102609
	PR c++/102609
	C++23 P0847R7 (deducing this) - diagnostics.
	* g++.dg/cpp23/feat-cxx2b.C: Test existance and value of
	__cpp_explicit_this_parameter feature test macro.
	* g++.dg/cpp26/feat-cxx26.C: Likewise.
	* g++.dg/cpp23/explicit-obj-cxx-dialect-A.C: New test.
	* g++.dg/cpp23/explicit-obj-cxx-dialect-B.C: New test.
	* g++.dg/cpp23/explicit-obj-cxx-dialect-C.C: New test.
	* g++.dg/cpp23/explicit-obj-cxx-dialect-D.C: New test.
	* g++.dg/cpp23/explicit-obj-cxx-dialect-E.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics1.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics2.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics3.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics4.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics5.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics6.C: New test.
	* g++.dg/cpp23/explicit-obj-diagnostics7.C: New test.

2024-01-09  waffl3x  <waffl3x@protonmail.com>

	PR c++/102609
	PR c++/102609
	C++23 P0847R7 (deducing this) - initial functionality.
	* g++.dg/cpp23/explicit-obj-basic1.C: New test.
	* g++.dg/cpp23/explicit-obj-basic2.C: New test.
	* g++.dg/cpp23/explicit-obj-basic3.C: New test.
	* g++.dg/cpp23/explicit-obj-basic4.C: New test.
	* g++.dg/cpp23/explicit-obj-basic5.C: New test.
	* g++.dg/cpp23/explicit-obj-by-value1.C: New test.
	* g++.dg/cpp23/explicit-obj-by-value2.C: New test.
	* g++.dg/cpp23/explicit-obj-by-value3.C: New test.
	* g++.dg/cpp23/explicit-obj-by-value4.C: New test.
	* g++.dg/cpp23/explicit-obj-constraints.C: New test.
	* g++.dg/cpp23/explicit-obj-constraints2.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-mem-arrow.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-mem-assignment.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-mem-call.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-mem-subscript.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-non-mem-dep.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-non-mem-non-dep.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-non-mem.h: New test.
	* g++.dg/cpp23/explicit-obj-ops-requires-mem.C: New test.
	* g++.dg/cpp23/explicit-obj-ops-requires-non-mem.C: New test.
	* g++.dg/cpp23/explicit-obj-redecl.C: New test.
	* g++.dg/cpp23/explicit-obj-redecl2.C: New test.
	* g++.dg/cpp23/explicit-obj-redecl3.C: New test.
	* g++.dg/cpp23/explicit-obj-redecl4.C: New test.

2024-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR c/113262
	* gcc.dg/pr113262.c: New test.

2024-01-09  Tamar Christina  <tamar.christina@arm.com>

	PR tree-optimization/113199
	* gcc.target/gcn/pr113199.c: New test.

2024-01-09  Tamar Christina  <tamar.christina@arm.com>

	* gcc.target/arm/vect-early-break-cbranch.c: Accept thumb output.

2024-01-09  Tamar Christina  <tamar.christina@arm.com>

	PR c/113267
	* gcc.dg/pr113267.c: New test.

2024-01-09  Tamar Christina  <tamar.christina@arm.com>

	PR middle-end/113163
	* gcc.target/gcn/pr113163.c: New test.

2024-01-09  Julian Brown  <julian@codesourcery.com>

	* c-c++-common/gomp/map-6.c: Update expected output.
	* c-c++-common/gomp/target-enter-data-1.c: Update scan test.
	* g++.dg/gomp/array-section-1.C: New test.
	* g++.dg/gomp/array-section-2.C: New test.
	* g++.dg/gomp/bad-array-section-1.C: New test.
	* g++.dg/gomp/bad-array-section-2.C: New test.
	* g++.dg/gomp/bad-array-section-3.C: New test.
	* g++.dg/gomp/bad-array-section-4.C: New test.
	* g++.dg/gomp/bad-array-section-5.C: New test.
	* g++.dg/gomp/bad-array-section-6.C: New test.
	* g++.dg/gomp/bad-array-section-7.C: New test.
	* g++.dg/gomp/bad-array-section-8.C: New test.
	* g++.dg/gomp/bad-array-section-9.C: New test.
	* g++.dg/gomp/bad-array-section-10.C: New test.
	* g++.dg/gomp/bad-array-section-11.C: New test.
	* g++.dg/gomp/has_device_addr-non-lvalue-1.C: New test.
	* g++.dg/gomp/pr67522.C: Update expected output.
	* g++.dg/gomp/ind-base-3.C: New test.
	* g++.dg/gomp/map-assignment-1.C: New test.
	* g++.dg/gomp/map-inc-1.C: New test.
	* g++.dg/gomp/map-lvalue-ref-1.C: New test.
	* g++.dg/gomp/map-ptrmem-1.C: New test.
	* g++.dg/gomp/map-ptrmem-2.C: New test.
	* g++.dg/gomp/map-static-cast-lvalue-1.C: New test.
	* g++.dg/gomp/map-ternary-1.C: New test.
	* g++.dg/gomp/member-array-2.C: New test.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gnat.dg/bip_prim_func2.adb: New test.
	* gnat.dg/bip_prim_func2_pkg.ads, gnat.dg/bip_prim_func2_pkg.adb:
	New helper package.

2024-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113210
	* gcc.c-torture/compile/pr113210.c: New test.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* gnat.dg/specs/anon4.ads: New test.

2024-01-09  Eric Botcazou  <ebotcazou@adacore.com>

	* g++.dg/opt/delay-slot-2.C: New test.

2024-01-09  Roger Sayle  <roger@nextmovesoftware.com>
	    Hongtao Liu  <hongtao.liu@intel.com>

	* gcc.target/i386/auto-init-8.c: Update test case.
	* gcc.target/i386/avx512f-broadcast-pr87767-1.c: Likewise.
	* gcc.target/i386/avx512f-broadcast-pr87767-5.c: Likewise.
	* gcc.target/i386/avx512fp16-13.c: Likewise.
	* gcc.target/i386/avx512vl-broadcast-pr87767-1.c: Likewise.
	* gcc.target/i386/avx512vl-broadcast-pr87767-5.c: Likewise.
	* gcc.target/i386/pr100865-1.c: Likewise.
	* gcc.target/i386/pr100865-10a.c: Likewise.
	* gcc.target/i386/pr100865-10b.c: Likewise.
	* gcc.target/i386/pr100865-2.c: Likewise.
	* gcc.target/i386/pr100865-3.c: Likewise.
	* gcc.target/i386/pr100865-4a.c: Likewise.
	* gcc.target/i386/pr100865-4b.c: Likewise.
	* gcc.target/i386/pr100865-5a.c: Likewise.
	* gcc.target/i386/pr100865-5b.c: Likewise.
	* gcc.target/i386/pr100865-9a.c: Likewise.
	* gcc.target/i386/pr100865-9b.c: Likewise.
	* gcc.target/i386/pr102021.c: Likewise.
	* gcc.target/i386/pr90773-17.c: Likewise.

2024-01-09  Haochen Jiang  <haochen.jiang@intel.com>

	* gcc.target/i386/avx512fp16-xorsign-1.c: Fix testcase.
	* gcc.target/i386/part-vect-absneghf.c: Ditto.

2024-01-09  Jiahao Xu  <xujiahao@loongson.cn>

	* gcc.target/loongarch/vector/lasx/lasx-vec-init-2.c: New test.

2024-01-09  Feng Wang  <wangfeng@eswincomputing.com>

	* gcc.target/riscv/rvv/base/zvbb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbb_vandn_vx_constraint.c: New test.
	* gcc.target/riscv/rvv/base/zvbc-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-1.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-2.c: New test.
	* gcc.target/riscv/rvv/base/zvkg-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvkned-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknha-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknhb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksed-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksh-intrinsic.c: New test.
	* gcc.target/riscv/zvkb.c: New test.

2024-01-08  John David Anglin  <danglin@gcc.gnu.org>

	* gcc.dg/tree-ssa/ssa-sink-18.c: xfail dg-final "Sunk statements: 5"
	on hppa*64*-*-*.

2024-01-08  John David Anglin  <danglin@gcc.gnu.org>

	* gfortran.dg/dec_math.f90: Skip on hppa*-*-hpux*.

2024-01-08  John David Anglin  <danglin@gcc.gnu.org>

	PR testsuite/94253
	* gfortran.dg/bind_c_coms.f90: Add -fcommon option on hppa*-*-*.
	* gfortran.dg/bind_c_vars.f90: Likewise.

2024-01-08  Cupertino Miranda  <cupertino.miranda@oracle.com>

	* gcc.target/bpf/attr-kernel-helper.c: New test.

2024-01-08  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/113245
	* gfortran.dg/size_optional_dim_2.f90: New test.

2024-01-08  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/113026
	* gcc.dg/torture/pr113026-1.c: New testcase.
	* gcc.dg/torture/pr113026-2.c: Likewise.

2024-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113228
	* gcc.c-torture/compile/pr113228.c: New test.

2024-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113120
	* gcc.dg/bitint-62.c: New test.

2024-01-08  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113119
	* gcc.dg/bitint-61.c: New test.

2024-01-08  Georg-Johann Lay  <avr@gjlay.de>

	PR target/112952
	* gcc.target/avr/attribute-io.h: New file.
	* gcc.target/avr/pr112952-0.c: New test.
	* gcc.target/avr/pr112952-1.c: New test.
	* gcc.target/avr/pr112952-2.c: New test.
	* gcc.target/avr/pr112952-3.c: New test.

2024-01-08  Kito Cheng  <kito.cheng@sifive.com>

	* gcc.target/riscv/rvv/autovec/partial/single_rgroup-3.h: Use
	check + abort rather than assert.

2024-01-07  Georg-Johann Lay  <avr@gjlay.de>

	* gcc.target/avr/lra-cpymem_qi.c: Remove duplicate -mmcu=.
	* gcc.target/avr/lra-elim.c: Same.
	* gcc.target/avr/pr112830.c: Skip for Reduced Tiny.
	* gcc.target/avr/pr46779-1.c: Same.
	* gcc.target/avr/pr46779-2.c: Same.
	* gcc.target/avr/pr86869.c: Skip for Reduced Tiny and add -std=gnu99
	for GNU-C due to address spaces.
	* gcc.target/avr/pr89270.c: Same.
	* gcc.target/avr/torture/builtins-2-flash.c: Only test address
	space __flash1 if we have it.
	* gcc.target/avr/torture/addr-space-1-1.c: Same.
	* gcc.target/avr/torture/addr-space-2-1.c: Same.

2024-01-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	* gfortran.dg/dtio_25.f90: Update.
	* gfortran.dg/namelist_57.f90: Update.
	* gfortran.dg/namelist_65.f90: Update.

2024-01-07  Roger Sayle  <roger@nextmovesoftware.com>
	    Uros Bizjak  <ubizjak@gmail.com>

	PR target/113231
	* gcc.target/i386/pr113231.c: New test case.

2024-01-07  Tamar Christina  <tamar.christina@arm.com>

	* gcc.dg/vect/vect-early-break_2.c: Skip Arm.
	* gcc.dg/vect/vect-early-break_7.c: Likewise.
	* gcc.dg/vect/vect-early-break_75.c: Likewise.
	* gcc.dg/vect/vect-early-break_77.c: Likewise.
	* gcc.dg/vect/vect-early-break_82.c: Likewise.
	* gcc.dg/vect/vect-early-break_88.c: Likewise.
	* lib/target-supports.exp (add_options_for_vect_early_break,
	check_effective_target_vect_early_break_hw,
	check_effective_target_vect_early_break): Support AArch32.
	* gcc.target/arm/vect-early-break-cbranch.c: New test.

2024-01-07  Jeff Law  <jlaw@ventanamicro.com>

	* gcc.dg/tree-ssa/phi-opt-25b.c: Remove extraneous "short".

2024-01-07  Georg-Johann Lay  <avr@gjlay.de>

	PR testsuite/52641
	* gcc.dg/torture/pr110838.c: Use proper shift offset to get MSB or int.
	* gcc.dg/torture/pr112282.c: Use at least 32 bits for :20 bit-fields.
	* gcc.dg/tree-ssa/bitcmp-5.c: Use integral type with 32 bits or more.
	* gcc.dg/tree-ssa/bitcmp-6.c: Same.
	* gcc.dg/tree-ssa/cltz-complement-max.c: Same.
	* gcc.dg/tree-ssa/cltz-max.c: Same.
	* gcc.dg/tree-ssa/if-to-switch-8.c: Use literals that fit int.
	* gcc.dg/tree-ssa/if-to-switch-9.c [avr]: Set case-values-threshold=3.
	* gcc.dg/tree-ssa/negneg-3.c: Discriminate [not] large_double.
	* gcc.dg/tree-ssa/phi-opt-25b.c: Use types of correct widths for
	__builtin_bswapN.
	* gcc.dg/tree-ssa/pr55177-1.c: Same.
	* gcc.dg/tree-ssa/popcount-max.c: Use int32_t where required.
	* gcc.dg/tree-ssa/pr111583-1.c: Use intptr_t as needed.
	* gcc.dg/tree-ssa/pr111583-2.c: Same.

2024-01-07  Georg-Johann Lay  <avr@gjlay.de>

	PR testsuite/52641
	* gcc.dg/memchr-3.c [avr]: Anticipate -Wbuiltin-declaration-mismatch.
	* gcc.dg/pr103207.c: Use __INT32_TYPE__ instead of int.
	* gcc.dg/pr103451.c [void* != long]: Anticipate -Wpointer-to-int-cast.
	* gcc.dg/pr110496.c [void* != long]: Anticipate -Wint-to-pointer-cast.
	* gcc.dg/pr109977.c: Use __SIZEOF_DOUBLE__ instead of 8.
	* gcc.dg/pr110506-2.c: Use __UINT32_TYPE__ for uint32_t.
	* gcc.dg/pr110582.c: Require int32plus.
	* gcc.dg/pr111039.c: [sizeof(int) < 4]: Use __INT32_TYPE__.
	* gcc.dg/pr111599.c: Same.
	* gcc.dg/builtin-dynamic-object-size-0.c: Require size20plus.
	* gcc.dg/builtin-object-size-1.c [avr]: Skip tests with strndup.
	* gcc.dg/builtin-object-size-2.c: Same.
	* gcc.dg/builtin-object-size-3.c: Same.
	* gcc.dg/builtin-object-size-4.c: Same.
	* gcc.dg/pr111070.c: Use __UINTPTR_TYPE__ instead of unsigned long.
	* gcc.dg/debug/btf/btf-pr106773.c: Same.
	* gcc.dg/debug/btf/btf-bitfields-2.c: [sizeof(int) < 4]: Use
	__UINT32_TYPE__.

2024-01-07  Georg-Johann Lay  <avr@gjlay.de>

	PR testsuite/52641
	* gcc.c-torture/compile/attr-complex-method-2.c [target=avr]: Check
	for "divsc3" as double = float per default.
	* gcc.c-torture/compile/pr106537-1.c: Use __INTPTR_TYPE__ instead of
	hard-coded "long".
	* gcc.c-torture/compile/pr106537-2.c: Same.
	* gcc.c-torture/compile/pr106537-3.c: Same.
	* gcc.c-torture/execute/20230630-3.c: Use __INT32_TYPE__ for bit-field
	wider than 16 bits.
	* gcc.c-torture/execute/20230630-4.c: Same.
	* gcc.c-torture/execute/pr109938.c: Require int32plus.
	* gcc.c-torture/execute/pr109986.c: Same.
	* gcc.dg/fold-ior-4.c: Same.
	* gcc.dg/fold-ior-5.c: Same
	* gcc.dg/fold-parity-5.c: Same.
	* gcc.dg/fold-popcount-5.c: Same.
	* gcc.dg/builtin-bswap-13.c [sizeof(int) < 4]: Use __INT32_TYPE__
	instead of int.
	* gcc.dg/builtin-bswap-14.c: Use __INT32_TYPE__ instead of int where
	required by code.
	* gcc.dg/c23-constexpr-9.c: Require large_double.
	* gcc.dg/c23-nullptr-1.c [target=avr]: xfail.
	* gcc.dg/loop-unswitch-10.c: Require size32plus.
	* gcc.dg/loop-unswitch-14.c: Same.
	* gcc.dg/loop-unswitch-11.c: Require int32.
	* gcc.dg/pr101836.c: Use __SIZEOF_INT instead of hard-coded 4.
	* gcc.dg/pr101836_1.c: Same.
	* gcc.dg/pr101836_2.c: Same.
	* gcc.dg/pr101836_3.c: Same.

2024-01-07  Nathaniel Shead  <nathanieloshead@gmail.com>

	* g++.dg/modules/init-5_a.C: New test.
	* g++.dg/modules/init-5_b.C: New test.

2024-01-07  Nathaniel Shead  <nathanieloshead@gmail.com>

	PR c++/109679
	* g++.dg/modules/using-11.h: New test.
	* g++.dg/modules/using-11_a.C: New test.
	* g++.dg/modules/using-11_b.C: New test.

2024-01-07  Nathaniel Shead  <nathanieloshead@gmail.com>

	PR c++/110808
	* g++.dg/modules/part-hdr-1_c.C: Fix syntax.
	* g++.dg/modules/part-mac-1_c.C: Likewise.
	* g++.dg/modules/mod-invalid-1.C: New test.
	* g++.dg/modules/part-8_a.C: New test.
	* g++.dg/modules/part-8_b.C: New test.
	* g++.dg/modules/part-8_c.C: New test.

2024-01-06  Harald Anlauf  <anlauf@gmx.de>
	    José Rui Faustino de Sousa  <jrfsousa@gmail.com>

	PR fortran/96724
	* gfortran.dg/repeat_8.f90: New test.

2024-01-06  Jiahao Xu  <xujiahao@loongson.cn>

	* gcc.target/loongarch/vector/lasx/lasx-xvpremi.c: Removed.
	* gcc.target/loongarch/vector/lasx/lasx-xvpermi_q.c: New test.

2024-01-06  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	PR target/113248
	* gcc.target/riscv/rvv/vsetvl/pr113248.c: New test.

2024-01-06  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul4-12.c: New test.
	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul8-14.c: New test.

2024-01-06  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vf_avl-4.c: New test.

2024-01-05  Richard Sandiford  <richard.sandiford@arm.com>

	PR target/113104
	* gcc.target/aarch64/pr113104.c: New test.
	* gcc.target/aarch64/sve/cond_arith_1.c: Update for new parameter
	names.
	* gcc.target/aarch64/sve/cond_arith_1_run.c: Likewise.
	* gcc.target/aarch64/sve/cond_arith_3.c: Likewise.
	* gcc.target/aarch64/sve/cond_arith_3_run.c: Likewise.
	* gcc.target/aarch64/sve/gather_load_6.c: Likewise.
	* gcc.target/aarch64/sve/gather_load_7.c: Likewise.
	* gcc.target/aarch64/sve/load_const_offset_2.c: Likewise.
	* gcc.target/aarch64/sve/load_const_offset_3.c: Likewise.
	* gcc.target/aarch64/sve/mask_gather_load_6.c: Likewise.
	* gcc.target/aarch64/sve/mask_gather_load_7.c: Likewise.
	* gcc.target/aarch64/sve/mask_load_slp_1.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_load_1.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_load_2.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_load_3.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_load_4.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_store_1.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_store_1_run.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_store_2.c: Likewise.
	* gcc.target/aarch64/sve/mask_struct_store_2_run.c: Likewise.
	* gcc.target/aarch64/sve/pack_1.c: Likewise.
	* gcc.target/aarch64/sve/reduc_4.c: Likewise.
	* gcc.target/aarch64/sve/scatter_store_6.c: Likewise.
	* gcc.target/aarch64/sve/scatter_store_7.c: Likewise.
	* gcc.target/aarch64/sve/strided_load_3.c: Likewise.
	* gcc.target/aarch64/sve/strided_store_3.c: Likewise.
	* gcc.target/aarch64/sve/unpack_fcvt_signed_1.c: Likewise.
	* gcc.target/aarch64/sve/unpack_fcvt_unsigned_1.c: Likewise.
	* gcc.target/aarch64/sve/unpack_signed_1.c: Likewise.
	* gcc.target/aarch64/sve/unpack_unsigned_1.c: Likewise.
	* gcc.target/aarch64/sve/unpack_unsigned_1_run.c: Likewise.
	* gcc.target/aarch64/sve/vcond_11.c: Likewise.
	* gcc.target/aarch64/sve/vcond_11_run.c: Likewise.

2024-01-05  Lulu Cheng  <chenglulu@loongson.cn>

	* gcc.target/loongarch/vect-ld-st-imm12.c: New test.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/fma-3.c: The intermediate file corresponding to the
	function does not produce the corresponding FNMA symbol, so the test
	rules should be skipped when testing.
	* gcc.dg/fma-4.c: The intermediate file corresponding to the
	function does not produce the corresponding FNMS symbol, so skip the
	test rules when testing.
	* gcc.dg/fma-6.c: The cause is the same as fma-3.c.
	* gcc.dg/fma-7.c: The cause is the same as fma-4.c

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/vect/bb-slp-pattern-1.c: If you are testing on the
	LoongArch architecture, you need to add the "-mlasx" compilation
	option to generate vectorized code.
	* gcc.dg/vect/slp-widen-mult-half.c: Dito.
	* gcc.dg/vect/vect-widen-mult-const-s16.c: Dito.
	* gcc.dg/vect/vect-widen-mult-const-u16.c: Dito.
	* gcc.dg/vect/vect-widen-mult-half-u8.c: Dito.
	* gcc.dg/vect/vect-widen-mult-half.c: Dito.
	* gcc.dg/vect/vect-widen-mult-u16.c: Dito.
	* gcc.dg/vect/vect-widen-mult-u8-s16-s32.c: Dito.
	* gcc.dg/vect/vect-widen-mult-u8-u32.c: Dito.
	* gcc.dg/vect/vect-widen-mult-u8.c: Dito.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gfortran.dg/vect/pr60510.f: Delete the default behavior of the
	program.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gfortran.dg/bind_c_array_params_2.f90: Add code test rules to
	support testing of the loongArch architecture.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/vect/vect-82.c: Add the LoongArch architecture to the
	object detection framework.
	* gcc.dg/vect/vect-83.c: Dito.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/vect/vect-bic-bitmask-12.c: Change the default
	setting of assembly to compile.
	* gcc.dg/vect/vect-bic-bitmask-23.c: Dito.

2024-01-05  chenxiaolong  <chenxiaolong@loongson.cn>

	* lib/target-supports.exp: Add LoongArch to the list of supported
	targets.

2024-01-05  Alex Coplan  <alex.coplan@arm.com>

	PR target/113217
	* g++.dg/pr113217.C: New test.

2024-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/113201
	* gcc.c-torture/compile/pr113201.c: New test.

2024-01-05  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/90693
	* gcc.target/i386/pr90693-2.c: New test.

2024-01-05  Kito Cheng  <kito.cheng@sifive.com>

	* gcc.target/riscv/rvv/autovec/partial/single_rgroup-2.h:
	Fix the check condition.

2024-01-05  Kito Cheng  <kito.cheng@sifive.com>

	* gcc.target/riscv/rvv/autovec/binop/shift-scalar-template.h:
	Use __builtin_abort instead of assert.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax-1.c: Drop math.h.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax-4.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin-4.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax_zvfh-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax_zvfh-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax_zvfh-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmax_zvfh-4.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin_zvfh-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin_zvfh-2.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin_zvfh-3.c: Ditto.
	* gcc.target/riscv/rvv/autovec/cond/cond_fmin_zvfh-4.c: Ditto.
	* gcc.target/riscv/rvv/autovec/partial/single_rgroup-2.h: Use
	__builtin_abort instead of assert.
	* gcc.target/riscv/rvv/autovec/pr112694-1.c: Ditto.
	* gcc.target/riscv/rvv/autovec/partial/single_rgroup-3.h: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/abs-template.h: Drop stdlib.h.
	* gcc.target/riscv/rvv/autovec/unop/vneg-template.h: Ditto.
	* gcc.target/riscv/rvv/autovec/unop/vnot-template.h: Ditto.

2024-01-05  Pan Li  <pan2.li@intel.com>

	Revert:
	2024-01-05  Feng Wang  <wangfeng@eswincomputing.com>

	* gcc.target/riscv/rvv/base/zvbb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbb_vandn_vx_constraint.c: New test.
	* gcc.target/riscv/rvv/base/zvbc-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-1.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-2.c: New test.
	* gcc.target/riscv/rvv/base/zvkg-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvkned-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknha-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknhb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksed-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksh-intrinsic.c: New test.
	* gcc.target/riscv/zvkb.c: New test.

2024-01-05  Feng Wang  <wangfeng@eswincomputing.com>

	* gcc.target/riscv/rvv/base/zvbb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbb_vandn_vx_constraint.c: New test.
	* gcc.target/riscv/rvv/base/zvbc-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-1.c: New test.
	* gcc.target/riscv/rvv/base/zvbc_vx_constraint-2.c: New test.
	* gcc.target/riscv/rvv/base/zvkg-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvkned-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknha-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvknhb-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksed-intrinsic.c: New test.
	* gcc.target/riscv/rvv/base/zvksh-intrinsic.c: New test.
	* gcc.target/riscv/zvkb.c: New test.

2024-01-04  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul8-13.c: New test.

2024-01-04  Andrew Pinski  <quic_apinski@quicinc.com>

	PR tree-optimization/113186
	* gcc.dg/tree-ssa/bitops-bool-1.c: New test.

2024-01-04  David Malcolm  <dmalcolm@redhat.com>

	* lib/gcc-dg.exp: Set TERM to xterm.

2024-01-04  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/112790
	* c-c++-common/analyzer/deref-before-check-pr112790.c: New test.

2024-01-04  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/113222
	* gcc.dg/analyzer/out-of-bounds-diagram-pr113222.c: New test.

2024-01-04  Kuan-Lin Chen  <rufus@andestech.com>
	    Patrick Lin  <patrick@andestech.com>
	    Rufus Chen  <rufus@andestech.com>
	    Monk Chiang  <monk.chiang@sifive.com>

	* gcc.target/riscv/_Float16-nanboxing.c: New test.

2024-01-04  Pan Li  <pan2.li@intel.com>

	Revert:
	2024-01-04  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul8-13.c: New test.

2024-01-04  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul8-13.c: New test.

2024-01-04  Kito Cheng  <kito.cheng@sifive.com>

	* gcc.target/riscv/interrupt-misaligned.c: New.

2024-01-04  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.dg/vect/slp-26.c: Add loongarch.

2024-01-04  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.dg/vect/costmodel/riscv/rvv/dynamic-lmul4-11.c: New test.

2024-01-04  chenxiaolong  <chenxiaolong@loongson.cn>

	* gcc.target/loongarch/vector/lasx/lasx-xvstelm.c:Add compile
	option "-fno-vect-cost-model" to dg-options.

2024-01-04  YunQiang Su  <syq@gcc.gnu.org>

	* gcc.c-torture/compile/mipscop-1.c: Include stdio.h.
	* gcc.c-torture/compile/mipscop-2.c: Ditto.
	* gcc.c-torture/compile/mipscop-3.c: Ditto.
	* gcc.c-torture/compile/mipscop-4.c: Ditto.

2024-01-04  YunQiang Su  <syq@gcc.gnu.org>

	* gcc.target/mips/pr104914.c: New test.

2024-01-04  YunQiang Su  <syq@gcc.gnu.org>

	* gcc.target/mips/data-sym-multi-pool.c: Skip Os or -O0.

2024-01-04  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	PR target/113206
	PR target/113209
	* gcc.target/riscv/rvv/vsetvl/avl_single-23.c: Adapt test.
	* gcc.target/riscv/rvv/vsetvl/vlmax_call-1.c: Robostify test.
	* gcc.target/riscv/rvv/vsetvl/vlmax_call-2.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_call-3.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-5.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-1.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-2.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-3.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-4.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-5.c: Ditto.
	* gcc.target/riscv/rvv/autovec/pr113206-1.c: New test.
	* gcc.target/riscv/rvv/autovec/pr113206-2.c: New test.
	* gcc.target/riscv/rvv/autovec/pr113209.c: New test.

2024-01-03  Patrick Palka  <ppalka@redhat.com>

	PR c++/113064
	* g++.dg/cpp0x/rv-conv4.C: New test.
	* g++.dg/cpp0x/rv-conv5.C: New test.

2024-01-03  Xi Ruoyao  <xry111@xry111.site>

	* gcc.target/loongarch/vfmax-vfmin.c: New test.

2024-01-03  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	PR target/113112
	* gcc.dg/vect/costmodel/riscv/rvv/pr113112-5.c: New test.

2024-01-02  Szabolcs Nagy  <szabolcs.nagy@arm.com>

	* gfortran.dg/vect/vect-8.f90: Accept more vectorized loops.

2024-01-02  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vf_avl-3.c: New test.

2024-01-02  Lulu Cheng  <chenglulu@loongson.cn>

	* lib/target-supports.exp: Add a function to check whether binutil supports
	TLS Le Relax.
	* gcc.target/loongarch/tls-le-relax.c: New test.

2024-01-02  Juzhe-Zhong  <juzhe.zhong@rivai.ai>

	PR target/113112
	* gcc.dg/vect/costmodel/riscv/rvv/pr113112-4.c: New test.


Copyright (C) 2024 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
